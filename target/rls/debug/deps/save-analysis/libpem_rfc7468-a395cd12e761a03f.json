{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3","program":"/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pem_rfc7468","--edition=2018","/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=a395cd12e761a03f","-C","extra-filename=-a395cd12e761a03f","--out-dir","/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps","-L","dependency=/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps","--extern","base64ct=/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps/libbase64ct-93b574b61a7579ee.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps/libpem_rfc7468-a395cd12e761a03f.rmeta"},"prelude":{"crate_id":{"name":"pem_rfc7468","disambiguator":[9206560531341134244,0]},"crate_root":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src","external_crates":[{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","num":5,"id":{"name":"base64ct","disambiguator":[15642600002087829237,0]}}],"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":0,"byte_end":5680,"line_start":1,"line_end":151,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4291,"byte_end":4297,"line_start":115,"line_end":115,"column_start":15,"column_end":21},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4299,"byte_end":4311,"line_start":115,"line_end":115,"column_start":23,"column_end":35},"alias_span":null,"name":"decode_label","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4328,"byte_end":4334,"line_start":116,"line_end":116,"column_start":15,"column_end":21},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4336,"byte_end":4347,"line_start":116,"line_end":116,"column_start":23,"column_end":34},"alias_span":null,"name":"encoded_len","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":222},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4349,"byte_end":4359,"line_start":116,"line_end":116,"column_start":36,"column_end":46},"alias_span":null,"name":"LineEnding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4374,"byte_end":4379,"line_start":117,"line_end":117,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4381,"byte_end":4387,"line_start":117,"line_end":117,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4445,"byte_end":4455,"line_start":121,"line_end":121,"column_start":26,"column_end":36},"alias_span":null,"name":"decode_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4466,"byte_end":4479,"line_start":121,"line_end":121,"column_start":47,"column_end":60},"alias_span":null,"name":"encode_string","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":0,"byte_end":5680,"line_start":1,"line_end":151,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":68},{"krate":0,"index":132},{"krate":0,"index":144},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" Pure Rust implementation of PEM Encoding ([RFC 7468]) for PKIX, PKCS, and\n CMS Structures, a strict subset of the original Privacy-Enhanced Mail encoding\n intended  specifically for use with cryptographic keys, certificates, and other\n messages.","sig":null,"attributes":[{"value":"/ Pure Rust implementation of PEM Encoding ([RFC 7468]) for PKIX, PKCS, and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ CMS Structures, a strict subset of the original Privacy-Enhanced Mail encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":78,"byte_end":160,"line_start":2,"line_end":2,"column_start":1,"column_end":83}},{"value":"/ intended  specifically for use with cryptographic keys, certificates, and other","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":161,"byte_end":244,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ messages.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":245,"byte_end":258,"line_start":4,"line_end":4,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":259,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Provides a `no_std`-friendly, constant-time implementation suitable for use with","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":263,"byte_end":347,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ cryptographic private keys.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":348,"byte_end":379,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":380,"byte_end":383,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # About","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":384,"byte_end":395,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":396,"byte_end":399,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Many cryptography-related document formats, such as certificates (PKIX),","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":400,"byte_end":476,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ private and public keys/keypairs (PKCS), and other cryptographic messages (CMS)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":477,"byte_end":560,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ provide an ASCII encoding which can be traced back to Privacy-Enhanced Mail","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":561,"byte_end":640,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ (PEM) as defined in [RFC 1421], which look like the following:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":641,"byte_end":707,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":708,"byte_end":711,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":712,"byte_end":723,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ -----BEGIN PRIVATE KEY-----","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":724,"byte_end":755,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/ MC4CAQAwBQYDK2VwBCIEIBftnHPp22SewYmmEoMcX8VwI4IHwaqd+9LFPj/15eqF","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":756,"byte_end":824,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ -----END PRIVATE KEY-----","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":825,"byte_end":854,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":855,"byte_end":862,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":863,"byte_end":866,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ However, all of these formats actually implement a text-based encoding that is","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":867,"byte_end":949,"line_start":22,"line_end":22,"column_start":1,"column_end":83}},{"value":"/ similar to, but *not* identical with, the legacy PEM encoding as described in","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":950,"byte_end":1031,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ [RFC 1421].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1032,"byte_end":1047,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ For this reason, [RFC 7468] was created to describe a stricter form of","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1052,"byte_end":1126,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ \"PEM encoding\" for use in these applications which codifies the previously","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1127,"byte_end":1205,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ de facto rules that most implementations operate by, and makes recommendations","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1206,"byte_end":1288,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ to promote interoperability.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1289,"byte_end":1321,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1322,"byte_end":1325,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This crate attempts to implement a strict interpretation of the [RFC 7468]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1326,"byte_end":1404,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ rules, implementing all of the MUSTs and SHOULDs while avoiding the MAYs,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1405,"byte_end":1482,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ and targeting the \"ABNF (Strict)\" subset of the grammar as described in","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1483,"byte_end":1558,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ [RFC 7468 Section 3 Figure 3 (p6)][RFC 7468 p6].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1559,"byte_end":1611,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1612,"byte_end":1615,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1616,"byte_end":1642,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - Core PEM implementation is `no_std`-friendly and requires no heap allocations.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1647,"byte_end":1731,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ - Avoids use of copies and temporary buffers.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1732,"byte_end":1781,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ - Uses the [`base64ct`] crate to decode/encode Base64 in constant-time.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1782,"byte_end":1857,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ - PEM parser avoids branching on potentially secret data as much as","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1858,"byte_end":1929,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/   possible. In the happy path, only 1-byte of secret data is potentially","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":1930,"byte_end":2006,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/   branched upon.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2007,"byte_end":2027,"line_start":43,"line_end":43,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2028,"byte_end":2031,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The paper [Util::Lookup: Exploiting key decoding in cryptographic libraries][Util::Lookup]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2032,"byte_end":2126,"line_start":45,"line_end":45,"column_start":1,"column_end":95}},{"value":"/ demonstrates how the leakage from non-constant-time PEM parsers can be used","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2127,"byte_end":2206,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ to practically extract RSA private keys from SGX enclaves.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2207,"byte_end":2269,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2270,"byte_end":2273,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported Rust Version","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2274,"byte_end":2310,"line_start":49,"line_end":49,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2311,"byte_end":2314,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This crate requires **Rust 1.51** at a minimum.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2315,"byte_end":2366,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2367,"byte_end":2370,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2371,"byte_end":2382,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2383,"byte_end":2386,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2387,"byte_end":2394,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2395,"byte_end":2454,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2455,"byte_end":2486,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2487,"byte_end":2494,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ /// Example PEM document","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2495,"byte_end":2523,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"/ /// NOTE: do not actually put private key literals into your source code!!!","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2524,"byte_end":2603,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ let example_pem = \"\\","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2604,"byte_end":2628,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ -----BEGIN PRIVATE KEY-----","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2629,"byte_end":2660,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/ MC4CAQAwBQYDK2VwBCIEIBftnHPp22SewYmmEoMcX8VwI4IHwaqd+9LFPj/15eqF","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2661,"byte_end":2729,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ -----END PRIVATE KEY-----","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2730,"byte_end":2759,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"/ \";","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2760,"byte_end":2766,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2767,"byte_end":2770,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Decode PEM","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2771,"byte_end":2788,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"/ let (type_label, data) = pem_rfc7468::decode_vec(example_pem.as_bytes())?;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2789,"byte_end":2867,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ assert_eq!(type_label, \"PRIVATE KEY\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2868,"byte_end":2910,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2911,"byte_end":2926,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/     data,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2927,"byte_end":2940,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     &[","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2941,"byte_end":2951,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/         48, 46, 2, 1, 0, 48, 5, 6, 3, 43, 101, 112, 4, 34, 4, 32, 23, 237, 156, 115, 233, 219,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":2952,"byte_end":3050,"line_start":73,"line_end":73,"column_start":1,"column_end":99}},{"value":"/         100, 158, 193, 137, 166, 18, 131, 28, 95, 197, 112, 35, 130, 7, 193, 170, 157, 251,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3051,"byte_end":3146,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/         210, 197, 62, 63, 245, 229, 234, 133","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3147,"byte_end":3195,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/     ]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3196,"byte_end":3205,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3206,"byte_end":3212,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3213,"byte_end":3216,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // Encode PEM","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3217,"byte_end":3234,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/ use pem_rfc7468::LineEnding;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3235,"byte_end":3267,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ let encoded_pem = pem_rfc7468::encode_string(type_label, LineEnding::default(), &data)?;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3268,"byte_end":3360,"line_start":81,"line_end":81,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(&encoded_pem, example_pem);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3361,"byte_end":3403,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3404,"byte_end":3411,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3412,"byte_end":3424,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3425,"byte_end":3432,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3433,"byte_end":3440,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3441,"byte_end":3444,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [RFC 1421]: https://datatracker.ietf.org/doc/html/rfc1421","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3445,"byte_end":3506,"line_start":88,"line_end":88,"column_start":1,"column_end":62}},{"value":"/ [RFC 7468]: https://datatracker.ietf.org/doc/html/rfc7468","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3507,"byte_end":3568,"line_start":89,"line_end":89,"column_start":1,"column_end":62}},{"value":"/ [RFC 7468 p6]: https://datatracker.ietf.org/doc/html/rfc7468#page-6","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3569,"byte_end":3640,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/ [Util::Lookup]: https://arxiv.org/pdf/2108.04600.pdf","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3641,"byte_end":3697,"line_start":91,"line_end":91,"column_start":1,"column_end":57}},{"value":"no_std","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3699,"byte_end":3709,"line_start":93,"line_end":93,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":3997,"byte_end":4041,"line_start":100,"line_end":100,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":4042,"byte_end":4105,"line_start":101,"line_end":101,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6619,"byte_end":6625,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"decode","qualname":"::decoder::decode","value":"pub fn decode<'i, 'o>(&'i [u8], &'o mut [u8]) -> Result<(&'i str, &'o [u8])>","parent":null,"children":[],"decl_id":null,"docs":" Decode a PEM document according to RFC 7468's \"Strict\" grammar.","sig":null,"attributes":[{"value":"/ Decode a PEM document according to RFC 7468's \"Strict\" grammar.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6363,"byte_end":6430,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6431,"byte_end":6434,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ On success, writes the decoded document into the provided buffer, returning","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6435,"byte_end":6514,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ the decoded label and the portion of the provided buffer containing the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6515,"byte_end":6590,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ decoded message.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6591,"byte_end":6611,"line_start":27,"line_end":27,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":7083,"byte_end":7093,"line_start":39,"line_end":39,"column_start":8,"column_end":18},"name":"decode_vec","qualname":"::decoder::decode_vec","value":"pub fn decode_vec(&[u8]) -> Result<(&str, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Decode a PEM document according to RFC 7468's \"Strict\" grammar, returning\n the result as a [`Vec`] upon success.\n","sig":null,"attributes":[{"value":"/ Decode a PEM document according to RFC 7468's \"Strict\" grammar, returning","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6881,"byte_end":6958,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ the result as a [`Vec`] upon success.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":6959,"byte_end":7000,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":7001,"byte_end":7026,"line_start":37,"line_end":37,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":7808,"byte_end":7820,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"decode_label","qualname":"::decoder::decode_label","value":"pub fn decode_label(&[u8]) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Decode the encapsulation boundaries of a PEM document according to RFC 7468's \"Strict\" grammar.","sig":null,"attributes":[{"value":"/ Decode the encapsulation boundaries of a PEM document according to RFC 7468's \"Strict\" grammar.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":7652,"byte_end":7751,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":7752,"byte_end":7755,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ On success, returning the decoded label.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":7756,"byte_end":7800,"line_start":57,"line_end":57,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":15565,"byte_end":15571,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoder::encode","value":"pub fn encode<'a>(&str, LineEnding, &[u8], &'a mut [u8]) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Encode a PEM document according to RFC 7468's \"Strict\" grammar.\n","sig":null,"attributes":[{"value":"/ Encode a PEM document according to RFC 7468's \"Strict\" grammar.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":15490,"byte_end":15557,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":16256,"byte_end":16267,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::encoder::encoded_len","value":"pub fn encoded_len(&str, LineEnding, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of a PEM encoded document with the given bytes and label.\n","sig":null,"attributes":[{"value":"/ Get the length of a PEM encoded document with the given bytes and label.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":16172,"byte_end":16248,"line_start":37,"line_end":37,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17058,"byte_end":17071,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"encode_string","qualname":"::encoder::encode_string","value":"pub fn encode_string(&str, LineEnding, &[u8]) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Encode a PEM document according to RFC 7468's \"Strict\" grammar, returning\n the result as a [`String`].\n","sig":null,"attributes":[{"value":"/ Encode a PEM document according to RFC 7468's \"Strict\" grammar, returning","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":16866,"byte_end":16943,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ the result as a [`String`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":16944,"byte_end":16975,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":16976,"byte_end":17001,"line_start":57,"line_end":57,"column_start":1,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17634,"byte_end":17636,"line_start":73,"line_end":73,"column_start":5,"column_end":7},"name":"CR","qualname":"::encoder::LineEnding::CR","value":"LineEnding::CR","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Carriage return: `\\r` (Pre-OS X Macintosh)\n","sig":null,"attributes":[{"value":"/ Carriage return: `\\r` (Pre-OS X Macintosh)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17583,"byte_end":17629,"line_start":72,"line_end":72,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17679,"byte_end":17681,"line_start":76,"line_end":76,"column_start":5,"column_end":7},"name":"LF","qualname":"::encoder::LineEnding::LF","value":"LineEnding::LF","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Line feed: `\\n` (Unix OSes)\n","sig":null,"attributes":[{"value":"/ Line feed: `\\n` (Unix OSes)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17643,"byte_end":17674,"line_start":75,"line_end":75,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17742,"byte_end":17746,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::encoder::LineEnding::CRLF","value":"LineEnding::CRLF","parent":{"krate":0,"index":222},"children":[],"decl_id":null,"docs":" Carriage return + line feed: `\\r\\n` (Windows)\n","sig":null,"attributes":[{"value":"/ Carriage return + line feed: `\\r\\n` (Windows)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17688,"byte_end":17737,"line_start":78,"line_end":78,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":222},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17566,"byte_end":17576,"line_start":71,"line_end":71,"column_start":10,"column_end":20},"name":"LineEnding","qualname":"::encoder::LineEnding","value":"pub enum LineEnding { CR, LF, CRLF, }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227}],"decl_id":null,"docs":" Line endings.","sig":null,"attributes":[{"value":"/ Line endings.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17331,"byte_end":17348,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17349,"byte_end":17352,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Use [`LineEnding::default`] to get an appropriate line ending for the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17353,"byte_end":17426,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ current operating system.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17427,"byte_end":17456,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17457,"byte_end":17494,"line_start":69,"line_end":69,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18129,"byte_end":18137,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<LineEnding>::as_bytes","value":"pub fn as_bytes(Self) -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the byte serialization of this [`LineEnding`].\n","sig":null,"attributes":[{"value":"/ Get the byte serialization of this [`LineEnding`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18063,"byte_end":18117,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18404,"byte_end":18407,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"len","qualname":"<LineEnding>::len","value":"pub fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the encoded length of this [`LineEnding`].\n","sig":null,"attributes":[{"value":"/ Get the encoded length of this [`LineEnding`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18342,"byte_end":18392,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20438,"byte_end":20444,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20412,"byte_end":20428,"line_start":5,"line_end":5,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":245},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20614,"byte_end":20620,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Base64","qualname":"::error::Error::Base64","value":"Error::Base64","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Base64-related errors.\n","sig":null,"attributes":[{"value":"/ Base64-related errors.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20583,"byte_end":20609,"line_start":12,"line_end":12,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":247},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20670,"byte_end":20687,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"CharacterEncoding","qualname":"::error::Error::CharacterEncoding","value":"Error::CharacterEncoding","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Character encoding-related errors.\n","sig":null,"attributes":[{"value":"/ Character encoding-related errors.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20627,"byte_end":20665,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20778,"byte_end":20794,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"EncapsulatedText","qualname":"::error::Error::EncapsulatedText","value":"Error::EncapsulatedText","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Errors in the encapsulated text (which aren't specifically Base64-related).\n","sig":null,"attributes":[{"value":"/ Errors in the encapsulated text (which aren't specifically Base64-related).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20694,"byte_end":20773,"line_start":18,"line_end":18,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":251},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20851,"byte_end":20867,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"name":"HeaderDisallowed","qualname":"::error::Error::HeaderDisallowed","value":"Error::HeaderDisallowed","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Header detected in the encapsulated text.\n","sig":null,"attributes":[{"value":"/ Header detected in the encapsulated text.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20801,"byte_end":20846,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20897,"byte_end":20902,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Label","qualname":"::error::Error::Label","value":"Error::Label","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Invalid label.\n","sig":null,"attributes":[{"value":"/ Invalid label.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20874,"byte_end":20892,"line_start":24,"line_end":24,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":255},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20933,"byte_end":20939,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Length","qualname":"::error::Error::Length","value":"Error::Length","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Invalid length.\n","sig":null,"attributes":[{"value":"/ Invalid length.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20909,"byte_end":20928,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":257},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21029,"byte_end":21037,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Preamble","qualname":"::error::Error::Preamble","value":"Error::Preamble","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" \"Preamble\" (text before pre-encapsulation boundary) contains invalid data.\n","sig":null,"attributes":[{"value":"/ \"Preamble\" (text before pre-encapsulation boundary) contains invalid data.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20946,"byte_end":21024,"line_start":30,"line_end":30,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":259},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21094,"byte_end":21118,"line_start":34,"line_end":34,"column_start":5,"column_end":29},"name":"PreEncapsulationBoundary","qualname":"::error::Error::PreEncapsulationBoundary","value":"Error::PreEncapsulationBoundary","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Errors in the pre-encapsulation boundary.\n","sig":null,"attributes":[{"value":"/ Errors in the pre-encapsulation boundary.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21044,"byte_end":21089,"line_start":33,"line_end":33,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21176,"byte_end":21201,"line_start":37,"line_end":37,"column_start":5,"column_end":30},"name":"PostEncapsulationBoundary","qualname":"::error::Error::PostEncapsulationBoundary","value":"Error::PostEncapsulationBoundary","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Errors in the post-encapsulation boundary.\n","sig":null,"attributes":[{"value":"/ Errors in the post-encapsulation boundary.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21125,"byte_end":21171,"line_start":36,"line_end":36,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":244},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20571,"byte_end":20576,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    Base64,\n    CharacterEncoding,\n    EncapsulatedText,\n    HeaderDisallowed,\n    Label,\n    Length,\n    Preamble,\n    PreEncapsulationBoundary,\n    PostEncapsulationBoundary,\n}","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261}],"decl_id":null,"docs":" Error type.\n","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20483,"byte_end":20498,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"non_exhaustive","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":20544,"byte_end":20561,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":208},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":5557,"byte_end":5565,"line_start":148,"line_end":148,"column_start":11,"column_end":19},"name":"PemLabel","qualname":"::PemLabel","value":"PemLabel","parent":null,"children":[{"krate":0,"index":209}],"decl_id":null,"docs":" Marker trait for types with an associated PEM type label.\n","sig":null,"attributes":[{"value":"/ Marker trait for types with an associated PEM type label.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":5485,"byte_end":5546,"line_start":147,"line_end":147,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":209},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":5653,"byte_end":5663,"line_start":150,"line_end":150,"column_start":11,"column_end":21},"name":"TYPE_LABEL","qualname":"::PemLabel::TYPE_LABEL","value":"&'static str","parent":{"krate":0,"index":208},"children":[],"decl_id":null,"docs":" Expected PEM type label for a given document, e.g. `\"PRIVATE KEY\"`\n","sig":null,"attributes":[{"value":"/ Expected PEM type label for a given document, e.g. `\"PRIVATE KEY\"`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/lib.rs","byte_start":5572,"byte_end":5642,"line_start":149,"line_end":149,"column_start":5,"column_end":75}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":9792,"byte_end":9805,"line_start":100,"line_end":100,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":12772,"byte_end":12785,"line_start":182,"line_end":182,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":13127,"byte_end":13132,"line_start":198,"line_end":198,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17768,"byte_end":17778,"line_start":82,"line_end":82,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18046,"byte_end":18056,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18774,"byte_end":18780,"line_start":123,"line_end":123,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21228,"byte_end":21233,"line_start":40,"line_end":40,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":22081,"byte_end":22086,"line_start":59,"line_end":59,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":22207,"byte_end":22212,"line_start":65,"line_end":65,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":9792,"byte_end":9805,"line_start":100,"line_end":100,"column_start":10,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":12772,"byte_end":12785,"line_start":182,"line_end":182,"column_start":32,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/decoder.rs","byte_start":13127,"byte_end":13132,"line_start":198,"line_end":198,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":59},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":17768,"byte_end":17778,"line_start":82,"line_end":82,"column_start":18,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":222},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18046,"byte_end":18056,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/encoder.rs","byte_start":18774,"byte_end":18780,"line_start":123,"line_end":123,"column_start":10,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":21228,"byte_end":21233,"line_start":40,"line_end":40,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":22081,"byte_end":22086,"line_start":59,"line_end":59,"column_start":32,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/pem-rfc7468-0.2.3/src/error.rs","byte_start":22207,"byte_end":22212,"line_start":65,"line_end":65,"column_start":45,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":244},"to":{"krate":1,"index":2930}}]}