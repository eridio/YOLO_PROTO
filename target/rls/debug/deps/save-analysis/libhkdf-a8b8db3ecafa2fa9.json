{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0","program":"/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hkdf","--edition=2018","/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a8b8db3ecafa2fa9","-C","extra-filename=-a8b8db3ecafa2fa9","--out-dir","/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps","-L","dependency=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps","--extern","digest=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/libdigest-818e23a60935432c.rmeta","--extern","hmac=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/libhmac-1bf55a2b209a5b24.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/libhkdf-a8b8db3ecafa2fa9.rmeta"},"prelude":{"crate_id":{"name":"hkdf","disambiguator":[12094944378081959426,0]},"crate_root":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src","external_crates":[{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":4,"id":{"name":"digest","disambiguator":[12615746790986655627,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":6,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":7,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":8,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":9,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":10,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":12,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":14,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":15,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":16,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":17,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":19,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":21,"id":{"name":"generic_array","disambiguator":[3507872413113695977,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":22,"id":{"name":"typenum","disambiguator":[2930080192617149959,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":23,"id":{"name":"hmac","disambiguator":[15482348535707493735,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":24,"id":{"name":"crypto_mac","disambiguator":[1154446380380154658,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","num":25,"id":{"name":"subtle","disambiguator":[12790587002246433791,0]}}],"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":0,"byte_end":6815,"line_start":1,"line_end":203,"column_start":1,"column_end":46}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":0,"byte_end":6815,"line_start":1,"line_end":203,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":40},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":45},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" An implementation of HKDF, the [HMAC-based Extract-and-Expand Key Derivation Function][1].","sig":null,"attributes":[{"value":"/ An implementation of HKDF, the [HMAC-based Extract-and-Expand Key Derivation Function][1].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":95,"byte_end":98,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":99,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":111,"byte_end":114,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":115,"byte_end":126,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ # use sha2::Sha256;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":127,"byte_end":150,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/ # use hkdf::Hkdf;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":151,"byte_end":172,"line_start":7,"line_end":7,"column_start":1,"column_end":22}},{"value":"/ let ikm = hex::decode(\"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\").unwrap();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":173,"byte_end":256,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ let salt = hex::decode(\"000102030405060708090a0b0c\").unwrap();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":257,"byte_end":323,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/ let info = hex::decode(\"f0f1f2f3f4f5f6f7f8f9\").unwrap();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":324,"byte_end":384,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":385,"byte_end":388,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let h = Hkdf::<Sha256>::new(Some(&salt[..]), &ikm);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":389,"byte_end":444,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/ let mut okm = [0u8; 42];","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":445,"byte_end":473,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/ h.expand(&info, &mut okm).unwrap();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":474,"byte_end":513,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ println!(\"OKM is {}\", hex::encode(&okm[..]));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":514,"byte_end":563,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":564,"byte_end":571,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":572,"byte_end":575,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [1]: https://tools.ietf.org/html/rfc5869","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":576,"byte_end":620,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"no_std","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":622,"byte_end":632,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":633,"byte_end":659,"line_start":21,"line_end":21,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1007,"byte_end":1023,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"InvalidPrkLength","qualname":"::InvalidPrkLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error that is returned when supplied pseudorandom key (PRK) is not long enough.\n","sig":null,"attributes":[{"value":"/ Error that is returned when supplied pseudorandom key (PRK) is not long enough.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":867,"byte_end":950,"line_start":31,"line_end":31,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1147,"byte_end":1160,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"InvalidLength","qualname":"::InvalidLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Structure for InvalidLength, used for output error handling.\n","sig":null,"attributes":[{"value":"/ Structure for InvalidLength, used for output error handling.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1026,"byte_end":1090,"line_start":35,"line_end":35,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1680,"byte_end":1691,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"HkdfExtract","qualname":"::HkdfExtract","value":"HkdfExtract {  }","parent":null,"children":[{"krate":0,"index":90}],"decl_id":null,"docs":" Structure representing the streaming context of an HKDF-Extract operation\n ```rust\n # use hkdf::{Hkdf, HkdfExtract};\n # use sha2::Sha256;\n let mut extract_ctx = HkdfExtract::<Sha256>::new(Some(b\"mysalt\"));\n extract_ctx.input_ikm(b\"hello\");\n extract_ctx.input_ikm(b\" world\");\n let (streamed_res, _) = extract_ctx.finalize();","sig":null,"attributes":[{"value":"/ Structure representing the streaming context of an HKDF-Extract operation","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1163,"byte_end":1240,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ ```rust","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1241,"byte_end":1252,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ # use hkdf::{Hkdf, HkdfExtract};","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1253,"byte_end":1289,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/ # use sha2::Sha256;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1290,"byte_end":1313,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ let mut extract_ctx = HkdfExtract::<Sha256>::new(Some(b\"mysalt\"));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1314,"byte_end":1384,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ extract_ctx.input_ikm(b\"hello\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1385,"byte_end":1421,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/ extract_ctx.input_ikm(b\" world\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1422,"byte_end":1459,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ let (streamed_res, _) = extract_ctx.finalize();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1460,"byte_end":1511,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1512,"byte_end":1515,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let (oneshot_res, _) = Hkdf::<Sha256>::extract(Some(b\"mysalt\"), b\"hello world\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1516,"byte_end":1600,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(streamed_res, oneshot_res);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1601,"byte_end":1643,"line_start":49,"line_end":49,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1644,"byte_end":1651,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2117,"byte_end":2120,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<HkdfExtract<D>>::new","value":"pub fn new(Option<&[u8]>) -> HkdfExtract<D>","parent":null,"children":[],"decl_id":null,"docs":" Initiates the HKDF-Extract context with the given optional salt\n","sig":null,"attributes":[{"value":"/ Initiates the HKDF-Extract context with the given optional salt","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2038,"byte_end":2105,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2501,"byte_end":2510,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"input_ikm","qualname":"<HkdfExtract<D>>::input_ikm","value":"pub fn input_ikm(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Feeds in additional input key material to the HKDF-Extract context\n","sig":null,"attributes":[{"value":"/ Feeds in additional input key material to the HKDF-Extract context","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2419,"byte_end":2489,"line_start":75,"line_end":75,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2718,"byte_end":2726,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"finalize","qualname":"<HkdfExtract<D>>::finalize","value":"pub fn finalize(Self) -> (GenericArray<u8, D::OutputSize>, Hkdf<D>)","parent":null,"children":[],"decl_id":null,"docs":" Completes the HKDF-Extract operation, returning both the generated pseudorandom key and\n `Hkdf` struct for expanding.\n","sig":null,"attributes":[{"value":"/ Completes the HKDF-Extract operation, returning both the generated pseudorandom key and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2578,"byte_end":2669,"line_start":80,"line_end":80,"column_start":5,"column_end":96}},{"value":"/ `Hkdf` struct for expanding.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2674,"byte_end":2706,"line_start":81,"line_end":81,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3051,"byte_end":3055,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"Hkdf","qualname":"::Hkdf","value":"Hkdf {  }","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" Structure representing the HKDF, capable of HKDF-Expand and HKDF-Extract operations.\n","sig":null,"attributes":[{"value":"/ Structure representing the HKDF, capable of HKDF-Expand and HKDF-Extract operations.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":2934,"byte_end":3022,"line_start":89,"line_end":89,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3606,"byte_end":3609,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Hkdf<D>>::new","value":"pub fn new(Option<&[u8]>, &[u8]) -> Hkdf<D>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for [`extract`][Hkdf::extract] when the generated\n pseudorandom key can be ignored and only HKDF-Expand operation is needed. This is the most\n common constructor.\n","sig":null,"attributes":[{"value":"/ Convenience method for [`extract`][Hkdf::extract] when the generated","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3395,"byte_end":3467,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ pseudorandom key can be ignored and only HKDF-Expand operation is needed. This is the most","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3472,"byte_end":3566,"line_start":107,"line_end":107,"column_start":5,"column_end":99}},{"value":"/ common constructor.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3571,"byte_end":3594,"line_start":108,"line_end":108,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3858,"byte_end":3866,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"from_prk","qualname":"<Hkdf<D>>::from_prk","value":"pub fn from_prk(&[u8]) -> Result<Hkdf<D>, InvalidPrkLength>","parent":null,"children":[],"decl_id":null,"docs":" Create `Hkdf` from an already cryptographically strong pseudorandom key\n as per section 3.3 from RFC5869.\n","sig":null,"attributes":[{"value":"/ Create `Hkdf` from an already cryptographically strong pseudorandom key","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3730,"byte_end":3805,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ as per section 3.3 from RFC5869.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3810,"byte_end":3846,"line_start":115,"line_end":115,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4416,"byte_end":4423,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"extract","qualname":"<Hkdf<D>>::extract","value":"pub fn extract(Option<&[u8]>, &[u8])\n-> (GenericArray<u8, D::OutputSize>, Hkdf<D>)","parent":null,"children":[],"decl_id":null,"docs":" The RFC5869 HKDF-Extract operation returning both the generated\n pseudorandom key and `Hkdf` struct for expanding.\n","sig":null,"attributes":[{"value":"/ The RFC5869 HKDF-Extract operation returning both the generated","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4279,"byte_end":4346,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ pseudorandom key and `Hkdf` struct for expanding.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4351,"byte_end":4404,"line_start":130,"line_end":130,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4857,"byte_end":4874,"line_start":140,"line_end":140,"column_start":12,"column_end":29},"name":"expand_multi_info","qualname":"<Hkdf<D>>::expand_multi_info","value":"pub fn expand_multi_info(&Self, &[&[u8]], &mut [u8])\n-> Result<(), InvalidLength>","parent":null,"children":[],"decl_id":null,"docs":" The RFC5869 HKDF-Expand operation. This is equivalent to calling\n [`expand`][Hkdf::extract] with the `info` argument set equal to the\n concatenation of all the elements of `info_components`.\n","sig":null,"attributes":[{"value":"/ The RFC5869 HKDF-Expand operation. This is equivalent to calling","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4637,"byte_end":4705,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ [`expand`][Hkdf::extract] with the `info` argument set equal to the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4710,"byte_end":4781,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ concatenation of all the elements of `info_components`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":4786,"byte_end":4845,"line_start":139,"line_end":139,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6167,"byte_end":6173,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"expand","qualname":"<Hkdf<D>>::expand","value":"pub fn expand(&Self, &[u8], &mut [u8]) -> Result<(), InvalidLength>","parent":null,"children":[],"decl_id":null,"docs":" The RFC5869 HKDF-Expand operation","sig":null,"attributes":[{"value":"/ The RFC5869 HKDF-Expand operation","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6044,"byte_end":6081,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6086,"byte_end":6089,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ If you don't have any `info` to pass, use an empty slice.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6094,"byte_end":6155,"line_start":181,"line_end":181,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1872,"byte_end":1883,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3236,"byte_end":3240,"line_start":100,"line_end":100,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6317,"byte_end":6333,"line_start":187,"line_end":187,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6581,"byte_end":6594,"line_start":196,"line_end":196,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":1872,"byte_end":1883,"line_start":61,"line_end":61,"column_start":9,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":3236,"byte_end":3240,"line_start":100,"line_end":100,"column_start":9,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6317,"byte_end":6333,"line_start":187,"line_end":187,"column_start":23,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":62},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/hkdf-0.11.0/src/hkdf.rs","byte_start":6581,"byte_end":6594,"line_start":196,"line_end":196,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":75},"to":{"krate":1,"index":9602}}]}