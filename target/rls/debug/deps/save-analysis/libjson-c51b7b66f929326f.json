{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4","program":"/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","json","--edition=2018","/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c51b7b66f929326f","-C","extra-filename=-c51b7b66f929326f","--out-dir","/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps","-L","dependency=/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/flo/Desktop/RUST/helloworld_web_ASSEMBLY/target/rls/debug/deps/libjson-c51b7b66f929326f.rmeta"},"prelude":{"crate_id":{"name":"json","disambiguator":[14009301593621664636,0]},"crate_root":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src","external_crates":[{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}}],"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":0,"byte_end":11436,"line_start":1,"line_end":429,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4964,"byte_end":4969,"line_start":212,"line_end":212,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4986,"byte_end":4995,"line_start":213,"line_end":213,"column_start":16,"column_end":25},"alias_span":null,"name":"JsonValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1022},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5023,"byte_end":5027,"line_start":214,"line_end":214,"column_start":27,"column_end":31},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1023},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5023,"byte_end":5027,"line_start":214,"line_end":214,"column_start":27,"column_end":31},"alias_span":null,"name":"Null","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5823,"byte_end":5828,"line_start":238,"line_end":238,"column_start":9,"column_end":14},"alias_span":null,"name":"JsonError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":837},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5923,"byte_end":5929,"line_start":241,"line_end":241,"column_start":16,"column_end":22},"alias_span":null,"name":"JsonResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5962,"byte_end":5967,"line_start":243,"line_end":243,"column_start":17,"column_end":22},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":0,"byte_end":11436,"line_start":1,"line_end":429,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":114},{"krate":0,"index":192},{"krate":0,"index":455},{"krate":0,"index":474},{"krate":0,"index":545},{"krate":0,"index":586},{"krate":0,"index":741},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"decl_id":null,"docs":" ![](https://raw.githubusercontent.com/maciejhirsz/json-rust/master/json-rust-logo-small.png)","sig":null,"attributes":[{"value":"/ ![](https://raw.githubusercontent.com/maciejhirsz/json-rust/master/json-rust-logo-small.png)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":0,"byte_end":96,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":97,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # json-rust","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":101,"byte_end":116,"line_start":3,"line_end":3,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":117,"byte_end":120,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Parse and serialize [JSON](http://json.org/) with ease.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":121,"byte_end":180,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":181,"byte_end":184,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **[Changelog](https://github.com/maciejhirsz/json-rust/releases) -**","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":185,"byte_end":257,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ **[Complete Documentation](https://docs.rs/json/) -**","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":258,"byte_end":315,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ **[Cargo](https://crates.io/crates/json) -**","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":316,"byte_end":364,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/ **[Repository](https://github.com/maciejhirsz/json-rust)**","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":365,"byte_end":427,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":428,"byte_end":431,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Why?","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":432,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":444,"byte_end":447,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ JSON is a very loose format where anything goes - arrays can hold mixed","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":448,"byte_end":523,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ types, object keys can change types between API calls or not include","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":524,"byte_end":596,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ some keys under some conditions. Mapping that to idiomatic Rust structs","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":597,"byte_end":672,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ introduces friction.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":673,"byte_end":697,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":698,"byte_end":701,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This crate intends to avoid that friction.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":702,"byte_end":748,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":749,"byte_end":752,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":753,"byte_end":764,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":765,"byte_end":802,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ # fn main() {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":803,"byte_end":820,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ let parsed = json::parse(r#\"","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":821,"byte_end":853,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":854,"byte_end":857,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":858,"byte_end":863,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/     \"code\": 200,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":864,"byte_end":884,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/     \"success\": true,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":885,"byte_end":909,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     \"payload\": {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":910,"byte_end":930,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/         \"features\": [","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":931,"byte_end":956,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/             \"awesome\",","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":957,"byte_end":983,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/             \"easyAPI\",","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":984,"byte_end":1010,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/             \"lowLearningCurve\"","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1011,"byte_end":1045,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/         ]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1046,"byte_end":1059,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1060,"byte_end":1069,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1070,"byte_end":1075,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1076,"byte_end":1079,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ \"#).unwrap();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1080,"byte_end":1097,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1098,"byte_end":1101,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let instantiated = object!{","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1102,"byte_end":1133,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/     // quotes on keys are optional","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1134,"byte_end":1172,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/     \"code\": 200,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1173,"byte_end":1193,"line_start":42,"line_end":42,"column_start":1,"column_end":21}},{"value":"/     success: true,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1194,"byte_end":1216,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/     payload: {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1217,"byte_end":1235,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/         features: [","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1236,"byte_end":1259,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/             \"awesome\",","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1260,"byte_end":1286,"line_start":46,"line_end":46,"column_start":1,"column_end":27}},{"value":"/             \"easyAPI\",","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1287,"byte_end":1313,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/             \"lowLearningCurve\"","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1314,"byte_end":1348,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/         ]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1349,"byte_end":1362,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1363,"byte_end":1372,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1373,"byte_end":1379,"line_start":51,"line_end":51,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1380,"byte_end":1383,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(parsed, instantiated);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1384,"byte_end":1421,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1422,"byte_end":1429,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1430,"byte_end":1437,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1438,"byte_end":1441,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## First class citizen","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1442,"byte_end":1468,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1469,"byte_end":1472,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Using macros and indexing, it's easy to work with the data.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1473,"byte_end":1536,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1537,"byte_end":1540,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1541,"byte_end":1552,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1553,"byte_end":1590,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/ # fn main() {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1591,"byte_end":1608,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ let mut data = object!{","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1609,"byte_end":1636,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/     foo: false,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1637,"byte_end":1656,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/     bar: null,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1657,"byte_end":1675,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     answer: 42,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1676,"byte_end":1695,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/     list: [null, \"world\", true]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1696,"byte_end":1731,"line_start":68,"line_end":68,"column_start":1,"column_end":36}},{"value":"/ };","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1732,"byte_end":1738,"line_start":69,"line_end":69,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1739,"byte_end":1742,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Partial equality is implemented for most raw types:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1743,"byte_end":1801,"line_start":71,"line_end":71,"column_start":1,"column_end":59}},{"value":"/ assert!(data[\"foo\"] == false);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1802,"byte_end":1836,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1837,"byte_end":1840,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // And it's type aware, `null` and `false` are different values:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1841,"byte_end":1909,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/ assert!(data[\"bar\"] != false);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1910,"byte_end":1944,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // But you can use any Rust number types:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1949,"byte_end":1994,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/ assert!(data[\"answer\"] == 42);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":1995,"byte_end":2029,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/ assert!(data[\"answer\"] == 42.0);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2030,"byte_end":2066,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ assert!(data[\"answer\"] == 42isize);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2067,"byte_end":2106,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2107,"byte_end":2110,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Access nested structures, arrays and objects:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2111,"byte_end":2163,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/ assert!(data[\"list\"][0].is_null());","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2164,"byte_end":2203,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ assert!(data[\"list\"][1] == \"world\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2204,"byte_end":2244,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/ assert!(data[\"list\"][2] == true);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2245,"byte_end":2282,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2283,"byte_end":2286,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Error resilient - accessing properties that don't exist yield null:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2287,"byte_end":2361,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ assert!(data[\"this\"][\"does\"][\"not\"][\"exist\"].is_null());","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2362,"byte_end":2422,"line_start":88,"line_end":88,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2423,"byte_end":2426,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // Mutate by assigning:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2427,"byte_end":2454,"line_start":90,"line_end":90,"column_start":1,"column_end":28}},{"value":"/ data[\"list\"][0] = \"Hello\".into();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2455,"byte_end":2492,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2493,"byte_end":2496,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Use the `dump` method to serialize the data:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2497,"byte_end":2548,"line_start":93,"line_end":93,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(data.dump(), r#\"{\"foo\":false,\"bar\":null,\"answer\":42,\"list\":[\"Hello\",\"world\",true]}\"#);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2549,"byte_end":2650,"line_start":94,"line_end":94,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2651,"byte_end":2654,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // Or pretty print it out:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2655,"byte_end":2685,"line_start":96,"line_end":96,"column_start":1,"column_end":31}},{"value":"/ println!(\"{:#}\", data);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2686,"byte_end":2713,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2714,"byte_end":2721,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2722,"byte_end":2729,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2730,"byte_end":2733,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ## Serialize with `json::stringify(value)`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2734,"byte_end":2780,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2781,"byte_end":2784,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Primitives:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2785,"byte_end":2800,"line_start":103,"line_end":103,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2801,"byte_end":2804,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2805,"byte_end":2812,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ // str slices","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2813,"byte_end":2830,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"/ assert_eq!(json::stringify(\"foobar\"), \"\\\"foobar\\\"\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2831,"byte_end":2887,"line_start":107,"line_end":107,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2888,"byte_end":2891,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ // Owned strings","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2892,"byte_end":2912,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"/ assert_eq!(json::stringify(\"foobar\".to_string()), \"\\\"foobar\\\"\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2913,"byte_end":2981,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2982,"byte_end":2985,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ // Any number types","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":2986,"byte_end":3009,"line_start":112,"line_end":112,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(json::stringify(42), \"42\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3010,"byte_end":3052,"line_start":113,"line_end":113,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3053,"byte_end":3056,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // Booleans","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3057,"byte_end":3072,"line_start":115,"line_end":115,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(json::stringify(true), \"true\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3073,"byte_end":3119,"line_start":116,"line_end":116,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(json::stringify(false), \"false\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3120,"byte_end":3168,"line_start":117,"line_end":117,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3169,"byte_end":3176,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3177,"byte_end":3180,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ Explicit `null` type `json::Null`:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3181,"byte_end":3219,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3220,"byte_end":3223,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3224,"byte_end":3231,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(json::stringify(json::Null), \"null\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3232,"byte_end":3284,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3285,"byte_end":3292,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3293,"byte_end":3296,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Optional types:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3297,"byte_end":3316,"line_start":126,"line_end":126,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3317,"byte_end":3320,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3321,"byte_end":3328,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/ let value: Option<String> = Some(\"foo\".to_string());","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3329,"byte_end":3385,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(json::stringify(value), \"\\\"foo\\\"\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3386,"byte_end":3436,"line_start":130,"line_end":130,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3437,"byte_end":3440,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ let no_value: Option<String> = None;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3441,"byte_end":3481,"line_start":132,"line_end":132,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(json::stringify(no_value), \"null\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3482,"byte_end":3532,"line_start":133,"line_end":133,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3533,"byte_end":3540,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3541,"byte_end":3544,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Vector:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3545,"byte_end":3556,"line_start":136,"line_end":136,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3557,"byte_end":3560,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3561,"byte_end":3568,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ let data = vec![1,2,3];","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3569,"byte_end":3596,"line_start":139,"line_end":139,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(json::stringify(data), \"[1,2,3]\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3597,"byte_end":3646,"line_start":140,"line_end":140,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3647,"byte_end":3654,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3655,"byte_end":3658,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Vector with optional values:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3659,"byte_end":3691,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3692,"byte_end":3695,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3696,"byte_end":3703,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ let data = vec![Some(1), None, Some(2), None, Some(3)];","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3704,"byte_end":3763,"line_start":146,"line_end":146,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(json::stringify(data), \"[1,null,2,null,3]\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3764,"byte_end":3823,"line_start":147,"line_end":147,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3824,"byte_end":3831,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3832,"byte_end":3835,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Pushing to arrays:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3836,"byte_end":3858,"line_start":150,"line_end":150,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3859,"byte_end":3862,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3863,"byte_end":3870,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/ let mut data = json::JsonValue::new_array();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3871,"byte_end":3919,"line_start":153,"line_end":153,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3920,"byte_end":3923,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ data.push(10);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3924,"byte_end":3942,"line_start":155,"line_end":155,"column_start":1,"column_end":19}},{"value":"/ data.push(\"foo\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3943,"byte_end":3964,"line_start":156,"line_end":156,"column_start":1,"column_end":22}},{"value":"/ data.push(false);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3965,"byte_end":3986,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3987,"byte_end":3990,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data.dump(), r#\"[10,\"foo\",false]\"#);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":3991,"byte_end":4042,"line_start":159,"line_end":159,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4043,"byte_end":4050,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Putting fields on objects:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4055,"byte_end":4085,"line_start":162,"line_end":162,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4086,"byte_end":4089,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4090,"byte_end":4097,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/ let mut data = json::JsonValue::new_object();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4098,"byte_end":4147,"line_start":165,"line_end":165,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4148,"byte_end":4151,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ data[\"answer\"] = 42.into();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4152,"byte_end":4183,"line_start":167,"line_end":167,"column_start":1,"column_end":32}},{"value":"/ data[\"foo\"] = \"bar\".into();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4184,"byte_end":4215,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4216,"byte_end":4219,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data.dump(), r#\"{\"answer\":42,\"foo\":\"bar\"}\"#);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4220,"byte_end":4280,"line_start":170,"line_end":170,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4281,"byte_end":4288,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4289,"byte_end":4292,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ `array!` macro:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4293,"byte_end":4312,"line_start":173,"line_end":173,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4313,"byte_end":4316,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4317,"byte_end":4324,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4325,"byte_end":4362,"line_start":176,"line_end":176,"column_start":1,"column_end":38}},{"value":"/ # fn main() {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4363,"byte_end":4380,"line_start":177,"line_end":177,"column_start":1,"column_end":18}},{"value":"/ let data = array![\"foo\", \"bar\", 100, true, null];","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4381,"byte_end":4434,"line_start":178,"line_end":178,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(data.dump(), r#\"[\"foo\",\"bar\",100,true,null]\"#);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4435,"byte_end":4497,"line_start":179,"line_end":179,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4498,"byte_end":4505,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4506,"byte_end":4513,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4514,"byte_end":4517,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ `object!` macro:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4518,"byte_end":4538,"line_start":183,"line_end":183,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4539,"byte_end":4542,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4543,"byte_end":4550,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4551,"byte_end":4588,"line_start":186,"line_end":186,"column_start":1,"column_end":38}},{"value":"/ # fn main() {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4589,"byte_end":4606,"line_start":187,"line_end":187,"column_start":1,"column_end":18}},{"value":"/ let data = object!{","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4607,"byte_end":4630,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/     name: \"John Doe\",","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4631,"byte_end":4656,"line_start":189,"line_end":189,"column_start":1,"column_end":26}},{"value":"/     age: 30,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4657,"byte_end":4673,"line_start":190,"line_end":190,"column_start":1,"column_end":17}},{"value":"/     canJSON: true","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4674,"byte_end":4695,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4696,"byte_end":4702,"line_start":192,"line_end":192,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4703,"byte_end":4718,"line_start":193,"line_end":193,"column_start":1,"column_end":16}},{"value":"/     data.dump(),","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4719,"byte_end":4739,"line_start":194,"line_end":194,"column_start":1,"column_end":21}},{"value":"/     r#\"{\"name\":\"John Doe\",\"age\":30,\"canJSON\":true}\"#","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4740,"byte_end":4796,"line_start":195,"line_end":195,"column_start":1,"column_end":57}},{"value":"/ );","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4797,"byte_end":4803,"line_start":196,"line_end":196,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4804,"byte_end":4811,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4812,"byte_end":4819,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codegen","qualname":"::codegen","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":64},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":94},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":113}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13152,"byte_end":13161,"line_start":42,"line_end":42,"column_start":11,"column_end":20},"name":"Generator","qualname":"::codegen::Generator","value":"Generator","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Default trait for serializing JSONValue into string.\n","sig":null,"attributes":[{"value":"/ Default trait for serializing JSONValue into string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13085,"byte_end":13141,"line_start":41,"line_end":41,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":40},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13173,"byte_end":13174,"line_start":43,"line_end":43,"column_start":10,"column_end":11},"name":"T","qualname":"::codegen::Generator::T","value":"type T: Write;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13191,"byte_end":13201,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"get_writer","qualname":"::codegen::Generator::get_writer","value":"pub fn get_writer(&mut Self) -> &mut Self::T","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13260,"byte_end":13265,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"write","qualname":"::codegen::Generator::write","value":"pub fn write(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13235,"byte_end":13252,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13390,"byte_end":13400,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"write_char","qualname":"::codegen::Generator::write_char","value":"pub fn write_char(&mut Self, u8) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13365,"byte_end":13382,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13497,"byte_end":13506,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"write_min","qualname":"::codegen::Generator::write_min","value":"pub fn write_min(&mut Self, &[u8], u8) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13590,"byte_end":13598,"line_start":60,"line_end":60,"column_start":8,"column_end":16},"name":"new_line","qualname":"::codegen::Generator::new_line","value":"pub fn new_line(&mut Self) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13565,"byte_end":13582,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13669,"byte_end":13675,"line_start":63,"line_end":63,"column_start":8,"column_end":14},"name":"indent","qualname":"::codegen::Generator::indent","value":"pub fn indent(&mut Self)","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13644,"byte_end":13661,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13720,"byte_end":13726,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"dedent","qualname":"::codegen::Generator::dedent","value":"pub fn dedent(&mut Self)","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13695,"byte_end":13712,"line_start":65,"line_end":65,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13770,"byte_end":13790,"line_start":69,"line_end":69,"column_start":8,"column_end":28},"name":"write_string_complex","qualname":"::codegen::Generator::write_string_complex","value":"pub fn write_string_complex(&mut Self, &str, usize) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(never)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":13746,"byte_end":13762,"line_start":68,"line_end":68,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":14443,"byte_end":14455,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"write_string","qualname":"::codegen::Generator::write_string","value":"pub fn write_string(&mut Self, &str) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":14418,"byte_end":14435,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":14827,"byte_end":14839,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"write_number","qualname":"::codegen::Generator::write_number","value":"pub fn write_number(&mut Self, &Number) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":14802,"byte_end":14819,"line_start":102,"line_end":102,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":15241,"byte_end":15253,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"write_object","qualname":"::codegen::Generator::write_object","value":"pub fn write_object(&mut Self, &Object) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":15216,"byte_end":15233,"line_start":118,"line_end":118,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":16008,"byte_end":16018,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"write_json","qualname":"::codegen::Generator::write_json","value":"pub fn write_json(&mut Self, &JsonValue) -> io::Result<()>","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":53},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17434,"byte_end":17447,"line_start":186,"line_end":186,"column_start":12,"column_end":25},"name":"DumpGenerator","qualname":"::codegen::DumpGenerator","value":"DumpGenerator {  }","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":" In-Memory Generator, this uses a Vec to store the JSON result.\n","sig":null,"attributes":[{"value":"/ In-Memory Generator, this uses a Vec to store the JSON result.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17356,"byte_end":17422,"line_start":185,"line_end":185,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17504,"byte_end":17507,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<DumpGenerator>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17616,"byte_end":17623,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"consume","qualname":"<DumpGenerator>::consume","value":"pub fn consume(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18467,"byte_end":18482,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"PrettyGenerator","qualname":"::codegen::PrettyGenerator","value":"PrettyGenerator {  }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" Pretty In-Memory Generator, this uses a Vec to store the JSON result and add indent.\n","sig":null,"attributes":[{"value":"/ Pretty In-Memory Generator, this uses a Vec to store the JSON result and add indent.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18367,"byte_end":18455,"line_start":230,"line_end":230,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18584,"byte_end":18587,"line_start":238,"line_end":238,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyGenerator>::new","value":"pub fn new(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18768,"byte_end":18775,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"consume","qualname":"<PrettyGenerator>::consume","value":"pub fn consume(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":19870,"byte_end":19885,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"WriterGenerator","qualname":"::codegen::WriterGenerator","value":"WriterGenerator {  }","parent":null,"children":[{"krate":0,"index":83}],"decl_id":null,"docs":" Writer Generator, this uses a custom writer to store the JSON result.\n","sig":null,"attributes":[{"value":"/ Writer Generator, this uses a custom writer to store the JSON result.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":19785,"byte_end":19858,"line_start":294,"line_end":294,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20000,"byte_end":20003,"line_start":300,"line_end":300,"column_start":12,"column_end":15},"name":"new","qualname":"<WriterGenerator>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20526,"byte_end":20547,"line_start":322,"line_end":322,"column_start":12,"column_end":33},"name":"PrettyWriterGenerator","qualname":"::codegen::PrettyWriterGenerator","value":"PrettyWriterGenerator {  }","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" Pretty Writer Generator, this uses a custom writer to store the JSON result and add indent.\n","sig":null,"attributes":[{"value":"/ Pretty Writer Generator, this uses a custom writer to store the JSON result and add indent.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20419,"byte_end":20514,"line_start":321,"line_end":321,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20712,"byte_end":20715,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<PrettyWriterGenerator>::new","value":"pub fn new(&'a mut W, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/parser.rs","byte_start":49033,"byte_end":49038,"line_start":761,"line_end":761,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::parse","value":"pub fn parse(&str) -> Result<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/parser.rs","byte_start":49016,"byte_end":49025,"line_start":760,"line_end":760,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53749,"byte_end":53753,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Null","qualname":"::value::JsonValue::Null","value":"JsonValue::Null","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1024},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53759,"byte_end":53764,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Short","qualname":"::value::JsonValue::Short","value":"JsonValue::Short(Short)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1027},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53777,"byte_end":53783,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"String","qualname":"::value::JsonValue::String","value":"JsonValue::String(String)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1030},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53797,"byte_end":53803,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Number","qualname":"::value::JsonValue::Number","value":"JsonValue::Number(Number)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1033},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53817,"byte_end":53824,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::JsonValue::Boolean","value":"JsonValue::Boolean(bool)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1036},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53836,"byte_end":53842,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Object","qualname":"::value::JsonValue::Object","value":"JsonValue::Object(Object)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1039},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53856,"byte_end":53861,"line_start":45,"line_end":45,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::JsonValue::Array","value":"JsonValue::Array(Vec<JsonValue>)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1021},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53733,"byte_end":53742,"line_start":38,"line_end":38,"column_start":10,"column_end":19},"name":"JsonValue","qualname":"::value::JsonValue","value":"pub enum JsonValue {\n    Null,\n    Short(Short),\n    String(String),\n    Number(Number),\n    Boolean(bool),\n    Object(Object),\n    Array(Vec<JsonValue>),\n}","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55602,"byte_end":55612,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"new_object","qualname":"<JsonValue>::new_object","value":"pub fn new_object() -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `JsonValue::Object` instance.\n When creating an object with data, consider using the `object!` macro.\n","sig":null,"attributes":[{"value":"/ Create an empty `JsonValue::Object` instance.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55462,"byte_end":55511,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/ When creating an object with data, consider using the `object!` macro.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55516,"byte_end":55590,"line_start":98,"line_end":98,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55816,"byte_end":55825,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"new_array","qualname":"<JsonValue>::new_array","value":"pub fn new_array() -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Create an empty `JsonValue::Array` instance.\n When creating array with data, consider using the `array!` macro.\n","sig":null,"attributes":[{"value":"/ Create an empty `JsonValue::Array` instance.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55682,"byte_end":55730,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/ When creating array with data, consider using the `array!` macro.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55735,"byte_end":55804,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55943,"byte_end":55947,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"dump","qualname":"<JsonValue>::dump","value":"pub fn dump(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Prints out the value as JSON string.\n","sig":null,"attributes":[{"value":"/ Prints out the value as JSON string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55891,"byte_end":55931,"line_start":109,"line_end":109,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56231,"byte_end":56237,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"pretty","qualname":"<JsonValue>::pretty","value":"pub fn pretty(&Self, u16) -> String","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string. Takes an argument that's\n number of spaces to indent new blocks with.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string. Takes an argument that's","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56095,"byte_end":56167,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ number of spaces to indent new blocks with.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56172,"byte_end":56219,"line_start":117,"line_end":117,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56660,"byte_end":56669,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"to_writer","qualname":"<JsonValue>::to_writer","value":"pub fn to_writer<W: Write>(&Self, &mut W)","parent":null,"children":[],"decl_id":null,"docs":" Writes the JSON as byte stream into an implementor of `std::io::Write`.","sig":null,"attributes":[{"value":"/ Writes the JSON as byte stream into an implementor of `std::io::Write`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56406,"byte_end":56481,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56486,"byte_end":56489,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This method is deprecated as it will panic on io errors, use `write` instead.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56494,"byte_end":56575,"line_start":126,"line_end":126,"column_start":5,"column_end":86}},{"value":"deprecated(since = \"0.10.2\", note = \"use `JsonValue::write` instead\")","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56580,"byte_end":56648,"line_start":127,"line_end":127,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56906,"byte_end":56911,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"write","qualname":"<JsonValue>::write","value":"pub fn write<W: Write>(&Self, &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the JSON as byte stream into an implementor of `std::io::Write`.\n","sig":null,"attributes":[{"value":"/ Writes the JSON as byte stream into an implementor of `std::io::Write`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":56819,"byte_end":56894,"line_start":133,"line_end":133,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":57144,"byte_end":57156,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"write_pretty","qualname":"<JsonValue>::write_pretty","value":"pub fn write_pretty<W: Write>(&Self, &mut W, u16) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the JSON as byte stream into an implementor of `std::io::Write`.\n","sig":null,"attributes":[{"value":"/ Writes the JSON as byte stream into an implementor of `std::io::Write`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":57057,"byte_end":57132,"line_start":139,"line_end":139,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":57336,"byte_end":57345,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"is_string","qualname":"<JsonValue>::is_string","value":"pub fn is_string(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":57540,"byte_end":57549,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"is_number","qualname":"<JsonValue>::is_number","value":"pub fn is_number(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":57702,"byte_end":57712,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"is_boolean","qualname":"<JsonValue>::is_boolean","value":"pub fn is_boolean(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":57866,"byte_end":57873,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"is_null","qualname":"<JsonValue>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58016,"byte_end":58025,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"is_object","qualname":"<JsonValue>::is_object","value":"pub fn is_object(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58178,"byte_end":58186,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_array","qualname":"<JsonValue>::is_array","value":"pub fn is_array(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58570,"byte_end":58578,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<JsonValue>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the value is empty. Returns true for:","sig":null,"attributes":[{"value":"/ Checks whether the value is empty. Returns true for:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58330,"byte_end":58386,"line_start":188,"line_end":188,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58391,"byte_end":58394,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ - empty string (`\"\"`)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58399,"byte_end":58424,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ - number `0`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58429,"byte_end":58445,"line_start":191,"line_end":191,"column_start":5,"column_end":21}},{"value":"/ - boolean `false`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58450,"byte_end":58471,"line_start":192,"line_end":192,"column_start":5,"column_end":26}},{"value":"/ - null","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58476,"byte_end":58486,"line_start":193,"line_end":193,"column_start":5,"column_end":15}},{"value":"/ - empty array (`array![]`)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58491,"byte_end":58521,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ - empty object (`object!{}`)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":58526,"byte_end":58558,"line_start":195,"line_end":195,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59065,"byte_end":59071,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"as_str","qualname":"<JsonValue>::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59310,"byte_end":59319,"line_start":216,"line_end":216,"column_start":12,"column_end":21},"name":"as_number","qualname":"<JsonValue>::as_number","value":"pub fn as_number(&Self) -> Option<Number>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59495,"byte_end":59501,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<JsonValue>::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59595,"byte_end":59601,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"as_f32","qualname":"<JsonValue>::as_f32","value":"pub fn as_f32(&Self) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59695,"byte_end":59701,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"as_u64","qualname":"<JsonValue>::as_u64","value":"pub fn as_u64(&Self) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59833,"byte_end":59839,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"as_u32","qualname":"<JsonValue>::as_u32","value":"pub fn as_u32(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":59959,"byte_end":59965,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"as_u16","qualname":"<JsonValue>::as_u16","value":"pub fn as_u16(&Self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60085,"byte_end":60090,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"as_u8","qualname":"<JsonValue>::as_u8","value":"pub fn as_u8(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60208,"byte_end":60216,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"as_usize","qualname":"<JsonValue>::as_usize","value":"pub fn as_usize(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60340,"byte_end":60346,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<JsonValue>::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60454,"byte_end":60460,"line_start":257,"line_end":257,"column_start":12,"column_end":18},"name":"as_i32","qualname":"<JsonValue>::as_i32","value":"pub fn as_i32(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60578,"byte_end":60584,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"as_i16","qualname":"<JsonValue>::as_i16","value":"pub fn as_i16(&Self) -> Option<i16>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60702,"byte_end":60707,"line_start":265,"line_end":265,"column_start":12,"column_end":17},"name":"as_i8","qualname":"<JsonValue>::as_i8","value":"pub fn as_i8(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60823,"byte_end":60831,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"as_isize","qualname":"<JsonValue>::as_isize","value":"pub fn as_isize(&Self) -> Option<isize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":60953,"byte_end":60960,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<JsonValue>::as_bool","value":"pub fn as_bool(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61876,"byte_end":61894,"line_start":297,"line_end":297,"column_start":12,"column_end":30},"name":"as_fixed_point_u64","qualname":"<JsonValue>::as_fixed_point_u64","value":"pub fn as_fixed_point_u64(&Self, u16) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Obtain an integer at a fixed decimal point. This is useful for\n converting monetary values and doing arithmetic on them without\n rounding errors introduced by floating point operations.","sig":null,"attributes":[{"value":"/ Obtain an integer at a fixed decimal point. This is useful for","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61138,"byte_end":61204,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/ converting monetary values and doing arithmetic on them without","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61209,"byte_end":61276,"line_start":281,"line_end":281,"column_start":5,"column_end":72}},{"value":"/ rounding errors introduced by floating point operations.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61281,"byte_end":61341,"line_start":282,"line_end":282,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61346,"byte_end":61349,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if `Number` called on a value that's not a number,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61354,"byte_end":61427,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ or if the number is negative or a NaN.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61432,"byte_end":61474,"line_start":285,"line_end":285,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61479,"byte_end":61482,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61487,"byte_end":61494,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ # use json::JsonValue;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61499,"byte_end":61525,"line_start":288,"line_end":288,"column_start":5,"column_end":31}},{"value":"/ let price_a = JsonValue::from(5.99);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61530,"byte_end":61570,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/ let price_b = JsonValue::from(7);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61575,"byte_end":61612,"line_start":290,"line_end":290,"column_start":5,"column_end":42}},{"value":"/ let price_c = JsonValue::from(10.2);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61617,"byte_end":61657,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61662,"byte_end":61665,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(price_a.as_fixed_point_u64(2), Some(599));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61670,"byte_end":61727,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_b.as_fixed_point_u64(2), Some(700));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61732,"byte_end":61789,"line_start":294,"line_end":294,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_c.as_fixed_point_u64(2), Some(1020));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61794,"byte_end":61852,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":61857,"byte_end":61864,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62518,"byte_end":62536,"line_start":315,"line_end":315,"column_start":12,"column_end":30},"name":"as_fixed_point_i64","qualname":"<JsonValue>::as_fixed_point_i64","value":"pub fn as_fixed_point_i64(&Self, u16) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Analog to `as_fixed_point_u64`, except returning a signed\n `i64`, properly handling negative numbers.","sig":null,"attributes":[{"value":"/ Analog to `as_fixed_point_u64`, except returning a signed","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62100,"byte_end":62161,"line_start":304,"line_end":304,"column_start":5,"column_end":66}},{"value":"/ `i64`, properly handling negative numbers.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62166,"byte_end":62212,"line_start":305,"line_end":305,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62217,"byte_end":62220,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62225,"byte_end":62232,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ # use json::JsonValue;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62237,"byte_end":62263,"line_start":308,"line_end":308,"column_start":5,"column_end":31}},{"value":"/ let balance_a = JsonValue::from(-1.49);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62268,"byte_end":62311,"line_start":309,"line_end":309,"column_start":5,"column_end":48}},{"value":"/ let balance_b = JsonValue::from(42);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62316,"byte_end":62356,"line_start":310,"line_end":310,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62361,"byte_end":62364,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(balance_a.as_fixed_point_i64(2), Some(-149));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62369,"byte_end":62429,"line_start":312,"line_end":312,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(balance_b.as_fixed_point_i64(2), Some(4200));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62434,"byte_end":62494,"line_start":313,"line_end":313,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62499,"byte_end":62506,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63235,"byte_end":63239,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"take","qualname":"<JsonValue>::take","value":"pub fn take(&mut Self) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Take over the ownership of the value, leaving `Null` in it's place.","sig":null,"attributes":[{"value":"/ Take over the ownership of the value, leaving `Null` in it's place.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62742,"byte_end":62813,"line_start":322,"line_end":322,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62818,"byte_end":62821,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62826,"byte_end":62840,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62845,"byte_end":62848,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62853,"byte_end":62860,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62865,"byte_end":62902,"line_start":327,"line_end":327,"column_start":5,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62907,"byte_end":62924,"line_start":328,"line_end":328,"column_start":5,"column_end":22}},{"value":"/ let mut data = array![\"Foo\", 42];","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62929,"byte_end":62966,"line_start":329,"line_end":329,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62971,"byte_end":62974,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let first = data[0].take();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":62979,"byte_end":63010,"line_start":331,"line_end":331,"column_start":5,"column_end":36}},{"value":"/ let second = data[1].take();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63015,"byte_end":63047,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63052,"byte_end":63055,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ assert!(first == \"Foo\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63060,"byte_end":63088,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/ assert!(second == 42);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63093,"byte_end":63119,"line_start":335,"line_end":335,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63124,"byte_end":63127,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ assert!(data[0].is_null());","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63132,"byte_end":63163,"line_start":337,"line_end":337,"column_start":5,"column_end":36}},{"value":"/ assert!(data[1].is_null());","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63168,"byte_end":63199,"line_start":338,"line_end":338,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63204,"byte_end":63211,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63216,"byte_end":63223,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64055,"byte_end":64066,"line_start":367,"line_end":367,"column_start":12,"column_end":23},"name":"take_string","qualname":"<JsonValue>::take_string","value":"pub fn take_string(&mut Self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Checks that self is a string, returns an owned Rust `String`, leaving\n `Null` in it's place.","sig":null,"attributes":[{"value":"/ Checks that self is a string, returns an owned Rust `String`, leaving","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63321,"byte_end":63394,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ `Null` in it's place.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63399,"byte_end":63424,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63429,"byte_end":63432,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ - If the contained string is already a heap allocated `String`, then","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63437,"byte_end":63509,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ the ownership is moved without any heap allocation.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63514,"byte_end":63569,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63574,"byte_end":63577,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ - If the contained string is a `Short`, this will perform a heap","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63582,"byte_end":63650,"line_start":351,"line_end":351,"column_start":5,"column_end":73}},{"value":"/ allocation to convert the types for you.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63655,"byte_end":63699,"line_start":352,"line_end":352,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63704,"byte_end":63707,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63712,"byte_end":63726,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63731,"byte_end":63734,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63739,"byte_end":63746,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate json;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63751,"byte_end":63788,"line_start":357,"line_end":357,"column_start":5,"column_end":42}},{"value":"/ # fn main() {","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63793,"byte_end":63810,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/ let mut data = array![\"Hello\", \"World\"];","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63815,"byte_end":63859,"line_start":359,"line_end":359,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63864,"byte_end":63867,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ let owned = data[0].take_string().expect(\"Should be a string\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63872,"byte_end":63939,"line_start":361,"line_end":361,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63944,"byte_end":63947,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(owned, \"Hello\");","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63952,"byte_end":63983,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/ assert!(data[0].is_null());","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":63988,"byte_end":64019,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64024,"byte_end":64031,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64036,"byte_end":64043,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64581,"byte_end":64585,"line_start":384,"line_end":384,"column_start":12,"column_end":16},"name":"push","qualname":"<JsonValue>::push","value":"pub fn push<T>(&mut Self, T) -> Result<()> where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - pushes a new value to the array.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - pushes a new value to the array.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64503,"byte_end":64569,"line_start":383,"line_end":383,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64998,"byte_end":65001,"line_start":397,"line_end":397,"column_start":12,"column_end":15},"name":"pop","qualname":"<JsonValue>::pop","value":"pub fn pop(&mut Self) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - remove and return last element from\n an array. On failure returns a null.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - remove and return last element from","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64872,"byte_end":64941,"line_start":395,"line_end":395,"column_start":5,"column_end":74}},{"value":"/ an array. On failure returns a null.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":64946,"byte_end":64986,"line_start":396,"line_end":396,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65301,"byte_end":65309,"line_start":407,"line_end":407,"column_start":12,"column_end":20},"name":"contains","qualname":"<JsonValue>::contains","value":"pub fn contains<T>(&Self, T) -> bool where T: PartialEq<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - checks if the array contains a value\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - checks if the array contains a value","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65219,"byte_end":65289,"line_start":406,"line_end":406,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65619,"byte_end":65626,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"has_key","qualname":"<JsonValue>::has_key","value":"pub fn has_key(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - checks if the object has a key\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - checks if the object has a key","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65542,"byte_end":65607,"line_start":414,"line_end":414,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65929,"byte_end":65932,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"len","qualname":"<JsonValue>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns length of array or object (number of keys), defaults to `0` for\n other types.\n","sig":null,"attributes":[{"value":"/ Returns length of array or object (number of keys), defaults to `0` for","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65821,"byte_end":65896,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ other types.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":65901,"byte_end":65917,"line_start":423,"line_end":423,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66335,"byte_end":66342,"line_start":438,"line_end":438,"column_start":12,"column_end":19},"name":"members","qualname":"<JsonValue>::members","value":"pub fn members(&Self) -> Members","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - returns an iterator over members.\n Will return an empty iterator if called on non-array types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - returns an iterator over members.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66188,"byte_end":66255,"line_start":436,"line_end":436,"column_start":5,"column_end":72}},{"value":"/ Will return an empty iterator if called on non-array types.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66260,"byte_end":66323,"line_start":437,"line_end":437,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66672,"byte_end":66683,"line_start":449,"line_end":449,"column_start":12,"column_end":23},"name":"members_mut","qualname":"<JsonValue>::members_mut","value":"pub fn members_mut(&mut Self) -> MembersMut","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - returns a mutable iterator over members.\n Will return an empty iterator if called on non-array types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - returns a mutable iterator over members.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66518,"byte_end":66592,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ Will return an empty iterator if called on non-array types.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66597,"byte_end":66660,"line_start":448,"line_end":448,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67035,"byte_end":67042,"line_start":460,"line_end":460,"column_start":12,"column_end":19},"name":"entries","qualname":"<JsonValue>::entries","value":"pub fn entries(&Self) -> Entries","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - returns an iterator over key value pairs.\n Will return an empty iterator if called on non-object types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - returns an iterator over key value pairs.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66878,"byte_end":66954,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ Will return an empty iterator if called on non-object types.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":66959,"byte_end":67023,"line_start":459,"line_end":459,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67404,"byte_end":67415,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"entries_mut","qualname":"<JsonValue>::entries_mut","value":"pub fn entries_mut(&mut Self) -> EntriesMut","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - returns a mutable iterator over\n key value pairs.\n Will return an empty iterator if called on non-object types.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - returns a mutable iterator over","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67232,"byte_end":67298,"line_start":469,"line_end":469,"column_start":5,"column_end":71}},{"value":"/ key value pairs.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67303,"byte_end":67323,"line_start":470,"line_end":470,"column_start":5,"column_end":25}},{"value":"/ Will return an empty iterator if called on non-object types.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67328,"byte_end":67392,"line_start":471,"line_end":471,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67930,"byte_end":67936,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"insert","qualname":"<JsonValue>::insert","value":"pub fn insert<T>(&mut Self, &str, T) -> Result<()> where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - inserts a new entry, or override an existing\n one into the object. Note that `key` has to be a `&str` slice and not an owned\n `String`. The internals of `Object` will handle the heap allocation of the key\n if needed for better performance.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - inserts a new entry, or override an existing","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67623,"byte_end":67702,"line_start":481,"line_end":481,"column_start":5,"column_end":84}},{"value":"/ one into the object. Note that `key` has to be a `&str` slice and not an owned","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67707,"byte_end":67789,"line_start":482,"line_end":482,"column_start":5,"column_end":87}},{"value":"/ `String`. The internals of `Object` will handle the heap allocation of the key","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67794,"byte_end":67876,"line_start":483,"line_end":483,"column_start":5,"column_end":87}},{"value":"/ if needed for better performance.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":67881,"byte_end":67918,"line_start":484,"line_end":484,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68453,"byte_end":68459,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"remove","qualname":"<JsonValue>::remove","value":"pub fn remove(&mut Self, &str) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Object` - remove a key and return the value it held.\n If the key was not present, the method is called on anything but an\n object, it will return a null.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Object` - remove a key and return the value it held.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68249,"byte_end":68326,"line_start":496,"line_end":496,"column_start":5,"column_end":82}},{"value":"/ If the key was not present, the method is called on anything but an","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68331,"byte_end":68402,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/ object, it will return a null.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68407,"byte_end":68441,"line_start":498,"line_end":498,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68926,"byte_end":68938,"line_start":511,"line_end":511,"column_start":12,"column_end":24},"name":"array_remove","qualname":"<JsonValue>::array_remove","value":"pub fn array_remove(&mut Self, usize) -> JsonValue","parent":null,"children":[],"decl_id":null,"docs":" Works on `JsonValue::Array` - remove an entry and return the value it held.\n If the method is called on anything but an object or if the index is out of bounds, it\n will return `JsonValue::Null`.\n","sig":null,"attributes":[{"value":"/ Works on `JsonValue::Array` - remove an entry and return the value it held.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68701,"byte_end":68780,"line_start":508,"line_end":508,"column_start":5,"column_end":84}},{"value":"/ If the method is called on anything but an object or if the index is out of bounds, it","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68785,"byte_end":68875,"line_start":509,"line_end":509,"column_start":5,"column_end":95}},{"value":"/ will return `JsonValue::Null`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":68880,"byte_end":68914,"line_start":510,"line_end":510,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":69437,"byte_end":69442,"line_start":526,"line_end":526,"column_start":12,"column_end":17},"name":"clear","qualname":"<JsonValue>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" When called on an array or an object, will wipe them clean. When called\n on a string will clear the string. Numbers and booleans become null.\n","sig":null,"attributes":[{"value":"/ When called on an array or an object, will wipe them clean. When called","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":69273,"byte_end":69348,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ on a string will clear the string. Numbers and booleans become null.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":69353,"byte_end":69425,"line_start":525,"line_end":525,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":1047},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77676,"byte_end":77695,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"UnexpectedCharacter","qualname":"::error::Error::UnexpectedCharacter","value":"Error::UnexpectedCharacter { ch, line, column }","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77771,"byte_end":77790,"line_start":15,"line_end":15,"column_start":5,"column_end":24},"name":"UnexpectedEndOfJson","qualname":"::error::Error::UnexpectedEndOfJson","value":"Error::UnexpectedEndOfJson","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77796,"byte_end":77814,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"name":"ExceededDepthLimit","qualname":"::error::Error::ExceededDepthLimit","value":"Error::ExceededDepthLimit","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77820,"byte_end":77837,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"FailedUtf8Parsing","qualname":"::error::Error::FailedUtf8Parsing","value":"Error::FailedUtf8Parsing","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1057},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77843,"byte_end":77852,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"WrongType","qualname":"::error::Error::WrongType","value":"Error::WrongType(String)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1046},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77664,"byte_end":77669,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    UnexpectedCharacter {\n        ch: char,\n        line: usize,\n        column: usize,\n    },\n    UnexpectedEndOfJson,\n    ExceededDepthLimit,\n    FailedUtf8Parsing,\n    WrongType(String),\n}","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1057}],"decl_id":null,"docs":" Error type of this crate.","sig":null,"attributes":[{"value":"/ Error type of this crate.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77488,"byte_end":77517,"line_start":3,"line_end":3,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77518,"byte_end":77521,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77522,"byte_end":77525,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ *Note:* Since `0.9.0` using `JsonError` is deprecated. Always use","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77526,"byte_end":77595,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ `json::Error` instead!","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77596,"byte_end":77622,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77889,"byte_end":77899,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"wrong_type","qualname":"<Error>::wrong_type","value":"pub fn wrong_type(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":545},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"short","qualname":"::short","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":563},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":562},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99016,"byte_end":99023,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"MAX_LEN","qualname":"::short::MAX_LEN","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99072,"byte_end":99077,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Short","qualname":"::short::Short","value":"Short {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99788,"byte_end":99798,"line_start":24,"line_end":24,"column_start":19,"column_end":29},"name":"from_slice","qualname":"<Short>::from_slice","value":"pub unsafe fn from_slice(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Short` from a `&str` slice. This method can cause buffer\n overflow if the length of the slice is larger than `MAX_LEN`, which is why\n it is marked as `unsafe`.","sig":null,"attributes":[{"value":"/ Creates a `Short` from a `&str` slice. This method can cause buffer","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99298,"byte_end":99369,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ overflow if the length of the slice is larger than `MAX_LEN`, which is why","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99374,"byte_end":99452,"line_start":16,"line_end":16,"column_start":5,"column_end":83}},{"value":"/ it is marked as `unsafe`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99457,"byte_end":99486,"line_start":17,"line_end":17,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99491,"byte_end":99494,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99499,"byte_end":99502,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Typically you should avoid creating your own `Short`s, instead create a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99507,"byte_end":99582,"line_start":20,"line_end":20,"column_start":5,"column_end":80}},{"value":"/ `JsonValue` (either using `\"foo\".into()` or `JsonValue::from(\"foo\")`) out","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99587,"byte_end":99664,"line_start":21,"line_end":21,"column_start":5,"column_end":82}},{"value":"/ of a slice. This will automatically decide on `String` or `Short` for you.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99669,"byte_end":99747,"line_start":22,"line_end":22,"column_start":5,"column_end":83}},{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99752,"byte_end":99769,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100129,"byte_end":100135,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Short>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Cheaply obtain a `&str` slice out of the `Short`.\n","sig":null,"attributes":[{"value":"/ Cheaply obtain a `&str` slice out of the `Short`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100050,"byte_end":100103,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100108,"byte_end":100117,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":586},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"object","qualname":"::object","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":638},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":1085},{"krate":0,"index":1090},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":658},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":715},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":738}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1092},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108516,"byte_end":108522,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"Object","qualname":"::object::Object","value":"Object {  }","parent":null,"children":[{"krate":0,"index":1093}],"decl_id":null,"docs":" A binary tree implementation of a string -> `JsonValue` map. You normally don't\n have to interact with instances of `Object`, much more likely you will be\n using the `JsonValue::Object` variant, which wraps around this struct.\n","sig":null,"attributes":[{"value":"/ A binary tree implementation of a string -> `JsonValue` map. You normally don't","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108251,"byte_end":108334,"line_start":224,"line_end":224,"column_start":1,"column_end":84}},{"value":"/ have to interact with instances of `Object`, much more likely you will be","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108335,"byte_end":108412,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ using the `JsonValue::Object` variant, which wraps around this struct.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108413,"byte_end":108487,"line_start":226,"line_end":226,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108727,"byte_end":108730,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"new","qualname":"<Object>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty instance of `Object`. Empty `Object` performs no\n allocation until a value is inserted into it.\n","sig":null,"attributes":[{"value":"/ Create a new, empty instance of `Object`. Empty `Object` performs no","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108567,"byte_end":108639,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ allocation until a value is inserted into it.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108644,"byte_end":108693,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108698,"byte_end":108715,"line_start":235,"line_end":235,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108937,"byte_end":108950,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Object>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Object` with memory preallocated for `capacity` number\n of entries.\n","sig":null,"attributes":[{"value":"/ Create a new `Object` with memory preallocated for `capacity` number","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108811,"byte_end":108883,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ of entries.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108888,"byte_end":108903,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108908,"byte_end":108925,"line_start":244,"line_end":244,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":111101,"byte_end":111107,"line_start":303,"line_end":303,"column_start":12,"column_end":18},"name":"insert","qualname":"<Object>::insert","value":"pub fn insert(&mut Self, &str, JsonValue)","parent":null,"children":[],"decl_id":null,"docs":" Insert a new entry, or override an existing one. Note that `key` has\n to be a `&str` slice and not an owned `String`. The internals of\n `Object` will handle the heap allocation of the key if needed for\n better performance.\n","sig":null,"attributes":[{"value":"/ Insert a new entry, or override an existing one. Note that `key` has","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":110828,"byte_end":110900,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ to be a `&str` slice and not an owned `String`. The internals of","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":110905,"byte_end":110973,"line_start":299,"line_end":299,"column_start":5,"column_end":73}},{"value":"/ `Object` will handle the heap allocation of the key if needed for","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":110978,"byte_end":111047,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ better performance.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":111052,"byte_end":111075,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":111080,"byte_end":111089,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":112795,"byte_end":112808,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"override_last","qualname":"<Object>::override_last","value":"pub fn override_last(&mut Self, JsonValue)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":112699,"byte_end":112708,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.11.11\", note = \"Was only meant for internal use\")","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":112713,"byte_end":112783,"line_start":354,"line_end":354,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":112952,"byte_end":112955,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"get","qualname":"<Object>::get","value":"pub fn get(&Self, &str) -> Option<&JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":113754,"byte_end":113761,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Object>::get_mut","value":"pub fn get_mut(&mut Self, &str) -> Option<&mut JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":114964,"byte_end":114970,"line_start":426,"line_end":426,"column_start":12,"column_end":18},"name":"remove","qualname":"<Object>::remove","value":"pub fn remove(&mut Self, &str) -> Option<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to remove the value behind `key`, if successful\n will return the `JsonValue` stored behind the `key`.\n","sig":null,"attributes":[{"value":"/ Attempts to remove the value behind `key`, if successful","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":114831,"byte_end":114891,"line_start":424,"line_end":424,"column_start":5,"column_end":65}},{"value":"/ will return the `JsonValue` stored behind the `key`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":114896,"byte_end":114952,"line_start":425,"line_end":425,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":116911,"byte_end":116914,"line_start":483,"line_end":483,"column_start":12,"column_end":15},"name":"len","qualname":"<Object>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":116882,"byte_end":116899,"line_start":482,"line_end":482,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":116998,"byte_end":117006,"line_start":488,"line_end":488,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Object>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":116969,"byte_end":116986,"line_start":487,"line_end":487,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117141,"byte_end":117146,"line_start":493,"line_end":493,"column_start":12,"column_end":17},"name":"clear","qualname":"<Object>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Wipe the `Object` clear. The capacity will remain untouched.\n","sig":null,"attributes":[{"value":"/ Wipe the `Object` clear. The capacity will remain untouched.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117065,"byte_end":117129,"line_start":492,"line_end":492,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117228,"byte_end":117232,"line_start":498,"line_end":498,"column_start":12,"column_end":16},"name":"iter","qualname":"<Object>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117199,"byte_end":117216,"line_start":497,"line_end":497,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117352,"byte_end":117360,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Object>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117323,"byte_end":117340,"line_start":504,"line_end":504,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117517,"byte_end":117521,"line_start":512,"line_end":512,"column_start":12,"column_end":16},"name":"dump","qualname":"<Object>::dump","value":"pub fn dump(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Prints out the value as JSON string.\n","sig":null,"attributes":[{"value":"/ Prints out the value as JSON string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117465,"byte_end":117505,"line_start":511,"line_end":511,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117807,"byte_end":117813,"line_start":520,"line_end":520,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Object>::pretty","value":"pub fn pretty(&Self, u16) -> String","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string. Takes an argument that's\n number of spaces to indent new blocks with.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string. Takes an argument that's","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117671,"byte_end":117743,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ number of spaces to indent new blocks with.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":117748,"byte_end":117795,"line_start":519,"line_end":519,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119277,"byte_end":119281,"line_start":576,"line_end":576,"column_start":12,"column_end":16},"name":"Iter","qualname":"::object::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":688}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119415,"byte_end":119420,"line_start":582,"line_end":582,"column_start":12,"column_end":17},"name":"empty","qualname":"<Iter>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty iterator that always returns `None`\n","sig":null,"attributes":[{"value":"/ Create an empty iterator that always returns `None`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119348,"byte_end":119403,"line_start":581,"line_end":581,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120040,"byte_end":120047,"line_start":611,"line_end":611,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::object::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":706}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120187,"byte_end":120192,"line_start":617,"line_end":617,"column_start":12,"column_end":17},"name":"empty","qualname":"<IterMut>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty iterator that always returns `None`\n","sig":null,"attributes":[{"value":"/ Create an empty iterator that always returns `None`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120120,"byte_end":120175,"line_start":616,"line_end":616,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":741},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"number","qualname":"::number","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":779},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1165},{"krate":0,"index":1167},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":822},{"krate":0,"index":825}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":775},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":122916,"byte_end":122919,"line_start":8,"line_end":8,"column_start":11,"column_end":14},"name":"NAN","qualname":"::number::NAN","value":"Number","parent":null,"children":[],"decl_id":null,"docs":" NaN value represented in `Number` type. NaN is equal to itself.\n","sig":null,"attributes":[{"value":"/ NaN value represented in `Number` type. NaN is equal to itself.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":122838,"byte_end":122905,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1096},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123638,"byte_end":123644,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Number","qualname":"::number::Number","value":"Number {  }","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"decl_id":null,"docs":" Number representation used inside `JsonValue`. You can easily convert\n the `Number` type into native Rust number types and back, or use the\n equality operator with another number type.","sig":null,"attributes":[{"value":"/ Number representation used inside `JsonValue`. You can easily convert","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123074,"byte_end":123147,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ the `Number` type into native Rust number types and back, or use the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123148,"byte_end":123220,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ equality operator with another number type.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123221,"byte_end":123268,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123269,"byte_end":123272,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123273,"byte_end":123280,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123281,"byte_end":123312,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ let foo: Number = 3.14.into();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123313,"byte_end":123347,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ let bar: f64 = foo.into();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123348,"byte_end":123378,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123379,"byte_end":123382,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(foo, 3.14);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123383,"byte_end":123409,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(bar, 3.14);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123410,"byte_end":123436,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123437,"byte_end":123444,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123445,"byte_end":123448,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ More often than not you will deal with `JsonValue::Number` variant that","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123449,"byte_end":123524,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ wraps around this type, instead of using the methods here directly.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":123525,"byte_end":123596,"line_start":32,"line_end":32,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124708,"byte_end":124728,"line_start":63,"line_end":63,"column_start":19,"column_end":39},"name":"from_parts_unchecked","qualname":"<Number>::from_parts_unchecked","value":"pub unsafe fn from_parts_unchecked(bool, u64, i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Number` from parts. This can't create a NaN value.","sig":null,"attributes":[{"value":"/ Construct a new `Number` from parts. This can't create a NaN value.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124101,"byte_end":124172,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124177,"byte_end":124180,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124185,"byte_end":124192,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124197,"byte_end":124228,"line_start":53,"line_end":53,"column_start":5,"column_end":36}},{"value":"/ let pi = unsafe { Number::from_parts_unchecked(true, 3141592653589793, -15) };","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124233,"byte_end":124315,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124320,"byte_end":124323,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(pi, 3.141592653589793);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124328,"byte_end":124366,"line_start":56,"line_end":56,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124371,"byte_end":124378,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124383,"byte_end":124386,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ While this method is marked unsafe, it doesn't actually perform any unsafe operations.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124391,"byte_end":124481,"line_start":59,"line_end":59,"column_start":5,"column_end":95}},{"value":"/ THe goal of the 'unsafe' is to deter from using this method in favor of its safe equivalent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124486,"byte_end":124581,"line_start":60,"line_end":60,"column_start":5,"column_end":100}},{"value":"/ `from_parts`, at least in context when the associated performance cost is negligible.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124586,"byte_end":124675,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124680,"byte_end":124689,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125362,"byte_end":125372,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Number>::from_parts","value":"pub fn from_parts(bool, u64, i16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Number` from parts, stripping unnecessary trailing zeroes.\n This can't create a NaN value.","sig":null,"attributes":[{"value":"/ Construct a new `Number` from parts, stripping unnecessary trailing zeroes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124925,"byte_end":125004,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ This can't create a NaN value.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125009,"byte_end":125043,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125048,"byte_end":125051,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125056,"byte_end":125063,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125068,"byte_end":125099,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ let one = Number::from_parts(true, 1000, -3);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125104,"byte_end":125153,"line_start":76,"line_end":76,"column_start":5,"column_end":54}},{"value":"/ let (positive, mantissa, exponent) = one.as_parts();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125158,"byte_end":125214,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125219,"byte_end":125222,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(true, positive);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125227,"byte_end":125258,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(1, mantissa);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125263,"byte_end":125291,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(0, exponent);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125296,"byte_end":125324,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125329,"byte_end":125336,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125341,"byte_end":125350,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126042,"byte_end":126050,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"as_parts","qualname":"<Number>::as_parts","value":"pub fn as_parts(&Self) -> (bool, u64, i16)","parent":null,"children":[],"decl_id":null,"docs":" Reverse to `from_parts` - obtain parts from an existing `Number`.","sig":null,"attributes":[{"value":"/ Reverse to `from_parts` - obtain parts from an existing `Number`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125642,"byte_end":125711,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125716,"byte_end":125719,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125724,"byte_end":125731,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125736,"byte_end":125767,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ let pi = Number::from(3.141592653589793);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125772,"byte_end":125817,"line_start":96,"line_end":96,"column_start":5,"column_end":50}},{"value":"/ let (positive, mantissa, exponent) = pi.as_parts();","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125822,"byte_end":125877,"line_start":97,"line_end":97,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125882,"byte_end":125885,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(positive, true);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125890,"byte_end":125921,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mantissa, 3141592653589793);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125926,"byte_end":125969,"line_start":100,"line_end":100,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(exponent, -15);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":125974,"byte_end":126004,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126009,"byte_end":126016,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126021,"byte_end":126030,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126178,"byte_end":126194,"line_start":109,"line_end":109,"column_start":12,"column_end":28},"name":"is_sign_positive","qualname":"<Number>::is_sign_positive","value":"pub fn is_sign_positive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126157,"byte_end":126166,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126278,"byte_end":126285,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Number>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126257,"byte_end":126266,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126380,"byte_end":126386,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"is_nan","qualname":"<Number>::is_nan","value":"pub fn is_nan(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126359,"byte_end":126368,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126529,"byte_end":126537,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Number>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the number is NaN or has a zero value.\n","sig":null,"attributes":[{"value":"/ Test if the number is NaN or has a zero value.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126453,"byte_end":126503,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126508,"byte_end":126517,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127280,"byte_end":127298,"line_start":145,"line_end":145,"column_start":12,"column_end":30},"name":"as_fixed_point_u64","qualname":"<Number>::as_fixed_point_u64","value":"pub fn as_fixed_point_u64(&Self, u16) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Obtain an integer at a fixed decimal point. This is useful for\n converting monetary values and doing arithmetic on them without\n rounding errors introduced by floating point operations.","sig":null,"attributes":[{"value":"/ Obtain an integer at a fixed decimal point. This is useful for","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126610,"byte_end":126676,"line_start":129,"line_end":129,"column_start":5,"column_end":71}},{"value":"/ converting monetary values and doing arithmetic on them without","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126681,"byte_end":126748,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ rounding errors introduced by floating point operations.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126753,"byte_end":126813,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126818,"byte_end":126821,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if `Number` is negative or a NaN.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126826,"byte_end":126882,"line_start":133,"line_end":133,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126887,"byte_end":126890,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126895,"byte_end":126902,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126907,"byte_end":126938,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/ let price_a = Number::from(5.99);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126943,"byte_end":126980,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ let price_b = Number::from(7);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":126985,"byte_end":127019,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/ let price_c = Number::from(10.2);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127024,"byte_end":127061,"line_start":139,"line_end":139,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127066,"byte_end":127069,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(price_a.as_fixed_point_u64(2), Some(599));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127074,"byte_end":127131,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_b.as_fixed_point_u64(2), Some(700));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127136,"byte_end":127193,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(price_c.as_fixed_point_u64(2), Some(1020));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127198,"byte_end":127256,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127261,"byte_end":127268,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":128144,"byte_end":128162,"line_start":172,"line_end":172,"column_start":12,"column_end":30},"name":"as_fixed_point_i64","qualname":"<Number>::as_fixed_point_i64","value":"pub fn as_fixed_point_i64(&Self, u16) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Analog to `as_fixed_point_u64`, except returning a signed\n `i64`, properly handling negative numbers.","sig":null,"attributes":[{"value":"/ Analog to `as_fixed_point_u64`, except returning a signed","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127727,"byte_end":127788,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ `i64`, properly handling negative numbers.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127793,"byte_end":127839,"line_start":162,"line_end":162,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127844,"byte_end":127847,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127852,"byte_end":127859,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use json::number::Number;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127864,"byte_end":127895,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ let balance_a = Number::from(-1.49);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127900,"byte_end":127940,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/ let balance_b = Number::from(42);","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127945,"byte_end":127982,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127987,"byte_end":127990,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(balance_a.as_fixed_point_i64(2), Some(-149));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":127995,"byte_end":128055,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(balance_b.as_fixed_point_i64(2), Some(4200));","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":128060,"byte_end":128120,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":128125,"byte_end":128132,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133611,"byte_end":133627,"line_start":390,"line_end":390,"column_start":12,"column_end":28},"name":"NumberOutOfScope","qualname":"::number::NumberOutOfScope","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type generated when trying to convert a `Number` into an\n integer of inadequate size.\n","sig":null,"attributes":[{"value":"/ Error type generated when trying to convert a `Number` into an","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133478,"byte_end":133544,"line_start":387,"line_end":387,"column_start":1,"column_end":67}},{"value":"/ integer of inadequate size.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133545,"byte_end":133576,"line_start":388,"line_end":388,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":837},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5187,"byte_end":5193,"line_start":221,"line_end":221,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type used by this crate.","sig":null,"attributes":[{"value":"/ Result type used by this crate.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5030,"byte_end":5065,"line_start":216,"line_end":216,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5066,"byte_end":5069,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5070,"byte_end":5073,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ *Note:* Since 0.9.0 the old `JsonResult` type is deprecated. Always use","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5074,"byte_end":5149,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"/ `json::Result` instead.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5150,"byte_end":5177,"line_start":220,"line_end":220,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":839},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5234,"byte_end":5243,"line_start":223,"line_end":223,"column_start":9,"column_end":18},"name":"iterators","qualname":"::iterators","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":840},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5312,"byte_end":5319,"line_start":225,"line_end":225,"column_start":14,"column_end":21},"name":"Members","qualname":"::iterators::Members","value":"::std::slice::Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterator over members of `JsonValue::Array`.\n","sig":null,"attributes":[{"value":"/ Iterator over members of `JsonValue::Array`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5250,"byte_end":5298,"line_start":224,"line_end":224,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":842},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5443,"byte_end":5453,"line_start":228,"line_end":228,"column_start":14,"column_end":24},"name":"MembersMut","qualname":"::iterators::MembersMut","value":"::std::slice::IterMut","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over members of `JsonValue::Array`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over members of `JsonValue::Array`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5373,"byte_end":5429,"line_start":227,"line_end":227,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":844},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5581,"byte_end":5588,"line_start":231,"line_end":231,"column_start":14,"column_end":21},"name":"Entries","qualname":"::iterators::Entries","value":"super::object::Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterator over key value pairs of `JsonValue::Object`.\n","sig":null,"attributes":[{"value":"/ Iterator over key value pairs of `JsonValue::Object`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5510,"byte_end":5567,"line_start":230,"line_end":230,"column_start":5,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":846},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5704,"byte_end":5714,"line_start":234,"line_end":234,"column_start":14,"column_end":24},"name":"EntriesMut","qualname":"::iterators::EntriesMut","value":"super::object::IterMut","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over key value pairs of `JsonValue::Object`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over key value pairs of `JsonValue::Object`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5625,"byte_end":5690,"line_start":233,"line_end":233,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":857},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":5979,"byte_end":5984,"line_start":245,"line_end":245,"column_start":10,"column_end":15},"name":"Array","qualname":"::Array","value":"Vec<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":858},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6056,"byte_end":6060,"line_start":248,"line_end":248,"column_start":8,"column_end":12},"name":"from","qualname":"::from","value":"pub fn from<T>(T) -> JsonValue where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Convenience for `JsonValue::from(value)`\n","sig":null,"attributes":[{"value":"/ Convenience for `JsonValue::from(value)`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6004,"byte_end":6048,"line_start":247,"line_end":247,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":860},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6189,"byte_end":6198,"line_start":253,"line_end":253,"column_start":8,"column_end":17},"name":"stringify","qualname":"::stringify","value":"pub fn stringify<T>(T) -> String where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6134,"byte_end":6181,"line_start":252,"line_end":252,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6430,"byte_end":6446,"line_start":260,"line_end":260,"column_start":8,"column_end":24},"name":"stringify_pretty","qualname":"::stringify_pretty","value":"pub fn stringify_pretty<T>(T, u16) -> String where T: Into<JsonValue>","parent":null,"children":[],"decl_id":null,"docs":" Pretty prints out the value as JSON string. Second argument is a\n number of spaces to indent new blocks with.\n","sig":null,"attributes":[{"value":"/ Pretty prints out the value as JSON string. Second argument is a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6306,"byte_end":6374,"line_start":258,"line_end":258,"column_start":1,"column_end":69}},{"value":"/ number of spaces to indent new blocks with.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":6375,"byte_end":6422,"line_start":259,"line_end":259,"column_start":1,"column_end":48}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17477,"byte_end":17490,"line_start":190,"line_end":190,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17828,"byte_end":17841,"line_start":204,"line_end":204,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18555,"byte_end":18570,"line_start":237,"line_end":237,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18880,"byte_end":18895,"line_start":251,"line_end":251,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":19944,"byte_end":19959,"line_start":299,"line_end":299,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20131,"byte_end":20146,"line_start":307,"line_end":307,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20650,"byte_end":20671,"line_start":328,"line_end":328,"column_start":13,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20923,"byte_end":20944,"line_start":338,"line_end":338,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/parser.rs","byte_start":34387,"byte_end":34393,"line_start":367,"line_end":367,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":74697,"byte_end":74706,"line_start":63,"line_end":63,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":74978,"byte_end":74987,"line_start":73,"line_end":73,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75193,"byte_end":75202,"line_start":82,"line_end":82,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75377,"byte_end":75386,"line_start":88,"line_end":88,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75575,"byte_end":75584,"line_start":94,"line_end":94,"column_start":65,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75761,"byte_end":75770,"line_start":100,"line_end":100,"column_start":66,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75915,"byte_end":75924,"line_start":106,"line_end":106,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":76453,"byte_end":76462,"line_start":126,"line_end":126,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53901,"byte_end":53910,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":54560,"byte_end":54569,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":54785,"byte_end":54794,"line_start":76,"line_end":76,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55446,"byte_end":55455,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":70025,"byte_end":70034,"line_start":548,"line_end":548,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":70580,"byte_end":70589,"line_start":575,"line_end":575,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":71484,"byte_end":71493,"line_start":613,"line_end":613,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":71723,"byte_end":71732,"line_start":624,"line_end":624,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":71890,"byte_end":71899,"line_start":632,"line_end":632,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":72353,"byte_end":72362,"line_start":656,"line_end":656,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":72714,"byte_end":72723,"line_start":670,"line_end":670,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":72870,"byte_end":72879,"line_start":676,"line_end":676,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77870,"byte_end":77875,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77999,"byte_end":78004,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":78654,"byte_end":78659,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/util/diyfp.rs","byte_start":80041,"byte_end":80046,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/util/diyfp.rs","byte_start":82996,"byte_end":83001,"line_start":135,"line_end":135,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/util/diyfp.rs","byte_start":83176,"byte_end":83181,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99286,"byte_end":99291,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100338,"byte_end":100343,"line_start":46,"line_end":46,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100471,"byte_end":100476,"line_start":53,"line_end":53,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100611,"byte_end":100616,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101012,"byte_end":101017,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101148,"byte_end":101154,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101265,"byte_end":101270,"line_start":84,"line_end":84,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101496,"byte_end":101501,"line_start":96,"line_end":96,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101614,"byte_end":101620,"line_start":102,"line_end":102,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":103872,"byte_end":103875,"line_start":69,"line_end":69,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":105560,"byte_end":105563,"line_start":129,"line_end":129,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":105588,"byte_end":105591,"line_start":130,"line_end":130,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":105759,"byte_end":105762,"line_start":134,"line_end":134,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":106443,"byte_end":106446,"line_start":155,"line_end":155,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":107633,"byte_end":107637,"line_start":198,"line_end":198,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":107812,"byte_end":107816,"line_start":204,"line_end":204,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108027,"byte_end":108031,"line_start":212,"line_end":212,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108554,"byte_end":108560,"line_start":232,"line_end":232,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":118106,"byte_end":118112,"line_start":529,"line_end":529,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":118398,"byte_end":118404,"line_start":543,"line_end":543,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":118881,"byte_end":118887,"line_start":559,"line_end":559,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119333,"byte_end":119337,"line_start":580,"line_end":580,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119518,"byte_end":119522,"line_start":589,"line_end":589,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119754,"byte_end":119758,"line_start":598,"line_end":598,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119955,"byte_end":119959,"line_start":605,"line_end":605,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":703}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120102,"byte_end":120109,"line_start":615,"line_end":615,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120297,"byte_end":120304,"line_start":624,"line_end":624,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120544,"byte_end":120551,"line_start":633,"line_end":633,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120752,"byte_end":120759,"line_start":640,"line_end":640,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":121226,"byte_end":121232,"line_start":666,"line_end":666,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":121445,"byte_end":121451,"line_start":677,"line_end":677,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":121609,"byte_end":121615,"line_start":685,"line_end":685,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":122152,"byte_end":122158,"line_start":712,"line_end":712,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":122392,"byte_end":122398,"line_start":721,"line_end":721,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":122545,"byte_end":122551,"line_start":727,"line_end":727,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124088,"byte_end":124094,"line_start":49,"line_end":49,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":128725,"byte_end":128731,"line_start":195,"line_end":195,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":129460,"byte_end":129466,"line_start":224,"line_end":224,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":131983,"byte_end":131989,"line_start":325,"line_end":325,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":132496,"byte_end":132502,"line_start":344,"line_end":344,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133028,"byte_end":133034,"line_start":363,"line_end":363,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133145,"byte_end":133151,"line_start":369,"line_end":369,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133656,"byte_end":133672,"line_start":392,"line_end":392,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133789,"byte_end":133805,"line_start":398,"line_end":398,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":136369,"byte_end":136375,"line_start":498,"line_end":498,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4847,"byte_end":4854,"line_start":202,"line_end":202,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4909,"byte_end":4914,"line_start":208,"line_end":208,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":545}},{"kind":"Mod","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4924,"byte_end":4930,"line_start":209,"line_end":209,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":586}},{"kind":"Mod","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/lib.rs","byte_start":4940,"byte_end":4946,"line_start":210,"line_end":210,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":741}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17477,"byte_end":17490,"line_start":190,"line_end":190,"column_start":6,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":17828,"byte_end":17841,"line_start":204,"line_end":204,"column_start":20,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18555,"byte_end":18570,"line_start":237,"line_end":237,"column_start":6,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":18880,"byte_end":18895,"line_start":251,"line_end":251,"column_start":20,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":64},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":19944,"byte_end":19959,"line_start":299,"line_end":299,"column_start":13,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20131,"byte_end":20146,"line_start":307,"line_end":307,"column_start":27,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":80},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20650,"byte_end":20671,"line_start":328,"line_end":328,"column_start":13,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/codegen.rs","byte_start":20923,"byte_end":20944,"line_start":338,"line_end":338,"column_start":27,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":94},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/parser.rs","byte_start":34387,"byte_end":34393,"line_start":367,"line_end":367,"column_start":10,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":74697,"byte_end":74706,"line_start":63,"line_end":63,"column_start":28,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":74978,"byte_end":74987,"line_start":73,"line_end":73,"column_start":46,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75193,"byte_end":75202,"line_start":82,"line_end":82,"column_start":43,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75377,"byte_end":75386,"line_start":88,"line_end":88,"column_start":56,"column_end":65},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75575,"byte_end":75584,"line_start":94,"line_end":94,"column_start":65,"column_end":74},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75761,"byte_end":75770,"line_start":100,"line_end":100,"column_start":66,"column_end":75},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":75915,"byte_end":75924,"line_start":106,"line_end":106,"column_start":33,"column_end":42},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/implements.rs","byte_start":76453,"byte_end":76462,"line_start":126,"line_end":126,"column_start":25,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":53901,"byte_end":53910,"line_start":48,"line_end":48,"column_start":20,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":54560,"byte_end":54569,"line_start":66,"line_end":66,"column_start":13,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":54785,"byte_end":54794,"line_start":76,"line_end":76,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":55446,"byte_end":55455,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":70025,"byte_end":70034,"line_start":548,"line_end":548,"column_start":23,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":70580,"byte_end":70589,"line_start":575,"line_end":575,"column_start":26,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":71484,"byte_end":71493,"line_start":613,"line_end":613,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":71723,"byte_end":71732,"line_start":624,"line_end":624,"column_start":24,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":71890,"byte_end":71899,"line_start":632,"line_end":632,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":72353,"byte_end":72362,"line_start":656,"line_end":656,"column_start":32,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":72714,"byte_end":72723,"line_start":670,"line_end":670,"column_start":27,"column_end":36},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/value/mod.rs","byte_start":72870,"byte_end":72879,"line_start":676,"line_end":676,"column_start":35,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1021},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77870,"byte_end":77875,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":77999,"byte_end":78004,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/error.rs","byte_start":78654,"byte_end":78659,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1046},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/util/diyfp.rs","byte_start":80041,"byte_end":80046,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/util/diyfp.rs","byte_start":82996,"byte_end":83001,"line_start":135,"line_end":135,"column_start":19,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/util/diyfp.rs","byte_start":83176,"byte_end":83181,"line_start":145,"line_end":145,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1069},"to":{"krate":2,"index":3096}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":99286,"byte_end":99291,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100338,"byte_end":100343,"line_start":46,"line_end":46,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100471,"byte_end":100476,"line_start":53,"line_end":53,"column_start":21,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":100611,"byte_end":100616,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101012,"byte_end":101017,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101148,"byte_end":101154,"line_start":78,"line_end":78,"column_start":22,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101265,"byte_end":101270,"line_start":84,"line_end":84,"column_start":25,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101496,"byte_end":101501,"line_start":96,"line_end":96,"column_start":28,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/short.rs","byte_start":101614,"byte_end":101620,"line_start":102,"line_end":102,"column_start":27,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":5,"index":7617},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":103872,"byte_end":103875,"line_start":69,"line_end":69,"column_start":6,"column_end":9},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":105560,"byte_end":105563,"line_start":129,"line_end":129,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":105588,"byte_end":105591,"line_start":130,"line_end":130,"column_start":22,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":105759,"byte_end":105762,"line_start":134,"line_end":134,"column_start":15,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":106443,"byte_end":106446,"line_start":155,"line_end":155,"column_start":16,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":107633,"byte_end":107637,"line_start":198,"line_end":198,"column_start":21,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":107812,"byte_end":107816,"line_start":204,"line_end":204,"column_start":20,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1085},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108027,"byte_end":108031,"line_start":212,"line_end":212,"column_start":6,"column_end":10},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":108554,"byte_end":108560,"line_start":232,"line_end":232,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":118106,"byte_end":118112,"line_start":529,"line_end":529,"column_start":16,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":118398,"byte_end":118404,"line_start":543,"line_end":543,"column_start":66,"column_end":72},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":118881,"byte_end":118887,"line_start":559,"line_end":559,"column_start":20,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119333,"byte_end":119337,"line_start":580,"line_end":580,"column_start":10,"column_end":14},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119518,"byte_end":119522,"line_start":589,"line_end":589,"column_start":23,"column_end":27},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119754,"byte_end":119758,"line_start":598,"line_end":598,"column_start":34,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":119955,"byte_end":119959,"line_start":605,"line_end":605,"column_start":32,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120102,"byte_end":120109,"line_start":615,"line_end":615,"column_start":10,"column_end":17},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120297,"byte_end":120304,"line_start":624,"line_end":624,"column_start":23,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120544,"byte_end":120551,"line_start":633,"line_end":633,"column_start":34,"column_end":41},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":7677}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":120752,"byte_end":120759,"line_start":640,"line_end":640,"column_start":32,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":121226,"byte_end":121232,"line_start":666,"line_end":666,"column_start":29,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":121445,"byte_end":121451,"line_start":677,"line_end":677,"column_start":24,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":121609,"byte_end":121615,"line_start":685,"line_end":685,"column_start":32,"column_end":38},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3319}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":122152,"byte_end":122158,"line_start":712,"line_end":712,"column_start":32,"column_end":38},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":122392,"byte_end":122398,"line_start":721,"line_end":721,"column_start":27,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/object.rs","byte_start":122545,"byte_end":122551,"line_start":727,"line_end":727,"column_start":35,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1092},"to":{"krate":2,"index":3323}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":124088,"byte_end":124094,"line_start":49,"line_end":49,"column_start":6,"column_end":12},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":128725,"byte_end":128731,"line_start":195,"line_end":195,"column_start":20,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":129460,"byte_end":129466,"line_start":224,"line_end":224,"column_start":23,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":131983,"byte_end":131989,"line_start":325,"line_end":325,"column_start":20,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":132496,"byte_end":132502,"line_start":344,"line_end":344,"column_start":20,"column_end":26},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133028,"byte_end":133034,"line_start":363,"line_end":363,"column_start":25,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133145,"byte_end":133151,"line_start":369,"line_end":369,"column_start":25,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133656,"byte_end":133672,"line_start":392,"line_end":392,"column_start":27,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":133789,"byte_end":133805,"line_start":398,"line_end":398,"column_start":32,"column_end":48},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/json-0.12.4/src/number.rs","byte_start":136369,"byte_end":136375,"line_start":498,"line_end":498,"column_start":19,"column_end":25},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1096},"to":{"krate":2,"index":3113}}]}