{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3","program":"/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","password_hash","--edition=2018","/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"rand_core\"","-C","metadata=86bdb5a89359e16b","-C","extra-filename=-86bdb5a89359e16b","--out-dir","/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps","-L","dependency=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps","--extern","base64ct=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/libbase64ct-93b574b61a7579ee.rmeta","--extern","rand_core=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/librand_core-4083c5c40dba8512.rmeta","--extern","subtle=/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/libsubtle-46f5206c4f2ab8ab.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/flo/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/flo/Desktop/RUST/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/target/rls/debug/deps/libpassword_hash-86bdb5a89359e16b.rmeta"},"prelude":{"crate_id":{"name":"password_hash","disambiguator":[5831028845591986351,0]},"crate_root":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src","external_crates":[{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":4,"id":{"name":"rand_core","disambiguator":[14492545944977650796,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":5,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","num":6,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":7,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":8,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":9,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":10,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":12,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":14,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":15,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":16,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":17,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":18,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":19,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":21,"id":{"name":"getrandom","disambiguator":[12471611216122866821,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":22,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","num":23,"id":{"name":"libc","disambiguator":[1960597585436425397,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","num":24,"id":{"name":"base64ct","disambiguator":[15642600002087829237,0]}},{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","num":25,"id":{"name":"subtle","disambiguator":[12790587002246433791,0]}}],"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":0,"byte_end":12081,"line_start":1,"line_end":381,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2095,"byte_end":2104,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":477},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14276,"byte_end":14281,"line_start":3,"line_end":3,"column_start":19,"column_end":24},"alias_span":null,"name":"B64Error","value":"","parent":{"krate":0,"index":32}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2221,"byte_end":2229,"line_start":66,"line_end":66,"column_start":15,"column_end":23},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":477},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2244,"byte_end":2252,"line_start":67,"line_end":67,"column_start":14,"column_end":22},"alias_span":null,"name":"B64Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2254,"byte_end":2259,"line_start":67,"line_end":67,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2261,"byte_end":2267,"line_start":67,"line_end":67,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":575},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2281,"byte_end":2286,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2300,"byte_end":2306,"line_start":69,"line_end":69,"column_start":13,"column_end":19},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2320,"byte_end":2332,"line_start":70,"line_end":70,"column_start":13,"column_end":25},"alias_span":null,"name":"ParamsString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2345,"byte_end":2349,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"alias_span":null,"name":"Salt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":664},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2351,"byte_end":2361,"line_start":71,"line_end":71,"column_start":18,"column_end":28},"alias_span":null,"name":"SaltString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2376,"byte_end":2383,"line_start":72,"line_end":72,"column_start":13,"column_end":20},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":676},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2385,"byte_end":2390,"line_start":72,"line_end":72,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":0,"byte_end":12081,"line_start":1,"line_end":381,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":32},{"krate":0,"index":47},{"krate":0,"index":93},{"krate":0,"index":165},{"krate":0,"index":280},{"krate":0,"index":361},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":709},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":488},{"krate":0,"index":500},{"krate":0,"index":504}],"decl_id":null,"docs":" This crate defines a set of traits which describe the functionality of\n [password hashing algorithms].","sig":null,"attributes":[{"value":"/ This crate defines a set of traits which describe the functionality of","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":0,"byte_end":74,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/ [password hashing algorithms].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":75,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":110,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Provides a `no_std`-friendly implementation of the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":114,"byte_end":168,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/ [Password Hashing Competition (PHC) string format specification][PHC]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":169,"byte_end":242,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ (a well-defined subset of the [Modular Crypt Format a.k.a. MCF][MCF]) which","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":243,"byte_end":322,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ works in conjunction with the traits this crate defines.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":323,"byte_end":383,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":384,"byte_end":387,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Supported Crates","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":388,"byte_end":410,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":411,"byte_end":414,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [RustCrypto/password-hashes] for algorithm implementations which use","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":415,"byte_end":491,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ this crate for interoperability:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":492,"byte_end":528,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":529,"byte_end":532,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - [`argon2`] - Argon2 memory hard key derivation function","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":533,"byte_end":594,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ - [`pbkdf2`] - Password-Based Key Derivation Function v2","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":595,"byte_end":655,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ - [`scrypt`] - scrypt key derivation function","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":656,"byte_end":705,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":706,"byte_end":709,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":710,"byte_end":721,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":722,"byte_end":725,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This crate represents password hashes using the [`PasswordHash`] type, which","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":726,"byte_end":806,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ represents a parsed \"PHC string\" with the following format:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":807,"byte_end":870,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":871,"byte_end":874,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":875,"byte_end":886,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":887,"byte_end":965,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":966,"byte_end":973,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":974,"byte_end":977,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ For more information, please see the documentation for [`PasswordHash`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":978,"byte_end":1054,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [password hashing algorithms]: https://en.wikipedia.org/wiki/Cryptographic_hash_function#Password_verification","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1059,"byte_end":1173,"line_start":29,"line_end":29,"column_start":1,"column_end":115}},{"value":"/ [PHC]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1174,"byte_end":1254,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1255,"byte_end":1332,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ [RustCrypto/password-hashes]: https://github.com/RustCrypto/password-hashes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1333,"byte_end":1412,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ [`argon2`]: https://docs.rs/argon2","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1413,"byte_end":1451,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ [`pbkdf2`]: https://docs.rs/pbkdf2","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1452,"byte_end":1490,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ [`scrypt`]: https://docs.rs/scrypt","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1491,"byte_end":1529,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"no_std","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1531,"byte_end":1541,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1837,"byte_end":1860,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":1861,"byte_end":1901,"line_start":45,"line_end":45,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12611,"byte_end":12614,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"B64","qualname":"::encoding::Encoding::B64","value":"Encoding::B64","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" \"B64\" encoding: standard Base64 without padding.","sig":null,"attributes":[{"value":"/ \"B64\" encoding: standard Base64 without padding.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12333,"byte_end":12385,"line_start":9,"line_end":9,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12390,"byte_end":12393,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12398,"byte_end":12409,"line_start":11,"line_end":11,"column_start":5,"column_end":16}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12414,"byte_end":12458,"line_start":12,"line_end":12,"column_start":5,"column_end":49}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12463,"byte_end":12510,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12515,"byte_end":12522,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ <https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#b64>","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12527,"byte_end":12606,"line_start":15,"line_end":15,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":510},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12779,"byte_end":12785,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Bcrypt","qualname":"::encoding::Encoding::Bcrypt","value":"Encoding::Bcrypt","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" bcrypt encoding.","sig":null,"attributes":[{"value":"/ bcrypt encoding.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12621,"byte_end":12641,"line_start":18,"line_end":18,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12646,"byte_end":12649,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12654,"byte_end":12665,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"/ ./         [A-Z]      [a-z]     [0-9]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12670,"byte_end":12711,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/ 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12716,"byte_end":12762,"line_start":22,"line_end":22,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12767,"byte_end":12774,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12933,"byte_end":12938,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::encoding::Encoding::Crypt","value":"Encoding::Crypt","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" `crypt(3)` encoding.","sig":null,"attributes":[{"value":"/ `crypt(3)` encoding.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12792,"byte_end":12816,"line_start":26,"line_end":26,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12821,"byte_end":12824,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12829,"byte_end":12840,"line_start":28,"line_end":28,"column_start":5,"column_end":16}},{"value":"/ [.-9]      [A-Z]      [a-z]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12845,"byte_end":12876,"line_start":29,"line_end":29,"column_start":5,"column_end":36}},{"value":"/ 0x2e-0x39, 0x41-0x5a, 0x61-0x7a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12881,"byte_end":12916,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12921,"byte_end":12928,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":507},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12318,"byte_end":12326,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::encoding::Encoding","value":"pub enum Encoding { B64, Bcrypt, Crypt, }","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512}],"decl_id":null,"docs":" Base64 encoding variants.\n","sig":null,"attributes":[{"value":"/ Base64 encoding variants.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12217,"byte_end":12246,"line_start":6,"line_end":6,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13121,"byte_end":13127,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"pub fn decode<impl AsRef<[u8]>: AsRef<[u8]>>(Self, impl AsRef<[u8]>,\n&mut [u8]) -> Result<&[u8], B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64 string into the provided destination buffer.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into the provided destination buffer.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13045,"byte_end":13109,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13591,"byte_end":13597,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"pub fn encode<'a>(Self, &[u8], &'a mut [u8]) -> Result<&'a str, B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode the input byte slice as Base64.","sig":null,"attributes":[{"value":"/ Encode the input byte slice as Base64.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13410,"byte_end":13452,"line_start":51,"line_end":51,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13457,"byte_end":13460,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Writes the result into the provided destination slice, returning an","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13465,"byte_end":13536,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ ASCII-encoded Base64 string value.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13541,"byte_end":13579,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13985,"byte_end":13996,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"<Encoding>::encoded_len","value":"pub fn encoded_len(Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of Base64 produced by encoding the given bytes.\n","sig":null,"attributes":[{"value":"/ Get the length of Base64 produced by encoding the given bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13907,"byte_end":13973,"line_start":64,"line_end":64,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14338,"byte_end":14344,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14312,"byte_end":14328,"line_start":7,"line_end":7,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":530},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14591,"byte_end":14600,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"Algorithm","qualname":"::errors::Error::Algorithm","value":"Error::Algorithm","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Unsupported algorithm.\n","sig":null,"attributes":[{"value":"/ Unsupported algorithm.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14560,"byte_end":14586,"line_start":14,"line_end":14,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":532},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14637,"byte_end":14640,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"B64","qualname":"::errors::Error::B64","value":"Error::B64(B64Error)","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" \"B64\" encoding error.\n","sig":null,"attributes":[{"value":"/ \"B64\" encoding error.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14607,"byte_end":14632,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14686,"byte_end":14692,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::errors::Error::Crypto","value":"Error::Crypto","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Cryptographic error.\n","sig":null,"attributes":[{"value":"/ Cryptographic error.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14657,"byte_end":14681,"line_start":20,"line_end":20,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":537},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14740,"byte_end":14754,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"OutputTooShort","qualname":"::errors::Error::OutputTooShort","value":"Error::OutputTooShort","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Output too short (min 10-bytes).\n","sig":null,"attributes":[{"value":"/ Output too short (min 10-bytes).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14699,"byte_end":14735,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14801,"byte_end":14814,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"OutputTooLong","qualname":"::errors::Error::OutputTooLong","value":"Error::OutputTooLong","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Output too long (max 64-bytes).\n","sig":null,"attributes":[{"value":"/ Output too long (max 64-bytes).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14761,"byte_end":14796,"line_start":26,"line_end":26,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14867,"byte_end":14886,"line_start":30,"line_end":30,"column_start":5,"column_end":24},"name":"ParamNameDuplicated","qualname":"::errors::Error::ParamNameDuplicated","value":"Error::ParamNameDuplicated","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Duplicate parameter name encountered.\n","sig":null,"attributes":[{"value":"/ Duplicate parameter name encountered.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14821,"byte_end":14862,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14925,"byte_end":14941,"line_start":33,"line_end":33,"column_start":5,"column_end":21},"name":"ParamNameInvalid","qualname":"::errors::Error::ParamNameInvalid","value":"Error::ParamNameInvalid","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Invalid parameter name.\n","sig":null,"attributes":[{"value":"/ Invalid parameter name.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14893,"byte_end":14920,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14981,"byte_end":14998,"line_start":36,"line_end":36,"column_start":5,"column_end":22},"name":"ParamValueInvalid","qualname":"::errors::Error::ParamValueInvalid","value":"Error::ParamValueInvalid","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Invalid parameter value.\n","sig":null,"attributes":[{"value":"/ Invalid parameter value.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14948,"byte_end":14976,"line_start":35,"line_end":35,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15052,"byte_end":15069,"line_start":39,"line_end":39,"column_start":5,"column_end":22},"name":"ParamsMaxExceeded","qualname":"::errors::Error::ParamsMaxExceeded","value":"Error::ParamsMaxExceeded","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Maximum number of parameters exceeded.\n","sig":null,"attributes":[{"value":"/ Maximum number of parameters exceeded.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15005,"byte_end":15047,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15102,"byte_end":15110,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Password","qualname":"::errors::Error::Password","value":"Error::Password","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Invalid password.\n","sig":null,"attributes":[{"value":"/ Invalid password.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15076,"byte_end":15097,"line_start":41,"line_end":41,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15175,"byte_end":15191,"line_start":45,"line_end":45,"column_start":5,"column_end":21},"name":"PhcStringInvalid","qualname":"::errors::Error::PhcStringInvalid","value":"Error::PhcStringInvalid","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Password hash string contains invalid characters.\n","sig":null,"attributes":[{"value":"/ Password hash string contains invalid characters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15117,"byte_end":15170,"line_start":44,"line_end":44,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15238,"byte_end":15255,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"name":"PhcStringTooShort","qualname":"::errors::Error::PhcStringTooShort","value":"Error::PhcStringTooShort","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Password hash string too short.\n","sig":null,"attributes":[{"value":"/ Password hash string too short.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15198,"byte_end":15233,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15301,"byte_end":15317,"line_start":51,"line_end":51,"column_start":5,"column_end":21},"name":"PhcStringTooLong","qualname":"::errors::Error::PhcStringTooLong","value":"Error::PhcStringTooLong","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Password hash string too long.\n","sig":null,"attributes":[{"value":"/ Password hash string too long.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15262,"byte_end":15296,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15348,"byte_end":15360,"line_start":54,"line_end":54,"column_start":5,"column_end":17},"name":"SaltTooShort","qualname":"::errors::Error::SaltTooShort","value":"Error::SaltTooShort","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Salt too short.\n","sig":null,"attributes":[{"value":"/ Salt too short.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15324,"byte_end":15343,"line_start":53,"line_end":53,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15390,"byte_end":15401,"line_start":57,"line_end":57,"column_start":5,"column_end":16},"name":"SaltTooLong","qualname":"::errors::Error::SaltTooLong","value":"Error::SaltTooLong","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Salt too long.\n","sig":null,"attributes":[{"value":"/ Salt too long.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15367,"byte_end":15385,"line_start":56,"line_end":56,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15443,"byte_end":15450,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"Version","qualname":"::errors::Error::Version","value":"Error::Version","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Invalid algorithm version.\n","sig":null,"attributes":[{"value":"/ Invalid algorithm version.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15408,"byte_end":15438,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":529},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14548,"byte_end":14553,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n    Algorithm,\n    B64(B64Error),\n    Crypto,\n    OutputTooShort,\n    OutputTooLong,\n    ParamNameDuplicated,\n    ParamNameInvalid,\n    ParamValueInvalid,\n    ParamsMaxExceeded,\n    Password,\n    PhcStringInvalid,\n    PhcStringTooShort,\n    PhcStringTooLong,\n    SaltTooShort,\n    SaltTooLong,\n    Version,\n}","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561}],"decl_id":null,"docs":" Password hashing errors.\n","sig":null,"attributes":[{"value":"/ Password hashing errors.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":14383,"byte_end":14411,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18756,"byte_end":18761,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm or parameter identifier.","sig":null,"attributes":[{"value":"/ Algorithm or parameter identifier.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18149,"byte_end":18187,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18188,"byte_end":18191,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type encompasses both the \"function symbolic name\" and \"parameter name\"","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18192,"byte_end":18272,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ use cases as described in the [PHC string format specification][1].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18273,"byte_end":18344,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18345,"byte_end":18348,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18349,"byte_end":18366,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-z0-9-]`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18367,"byte_end":18434,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18435,"byte_end":18488,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 1 ASCII character (i.e. 1-byte)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18489,"byte_end":18542,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ - Maximum length: 32 ASCII characters (i.e. 32-bytes)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18543,"byte_end":18600,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18601,"byte_end":18604,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18605,"byte_end":18683,"line_start":33,"line_end":33,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19752,"byte_end":19755,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<Ident>::new","value":"pub const fn new(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse an [`Ident`] from a string.","sig":null,"attributes":[{"value":"/ Parse an [`Ident`] from a string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19297,"byte_end":19334,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19339,"byte_end":19342,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19347,"byte_end":19359,"line_start":50,"line_end":50,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19364,"byte_end":19367,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Must conform to the contraints given in the type-level documentation,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19372,"byte_end":19445,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ or else it will panic.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19450,"byte_end":19476,"line_start":53,"line_end":53,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19481,"byte_end":19484,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use in a `const` context where instead of","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19489,"byte_end":19562,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ panicking it will cause a compile error.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19567,"byte_end":19611,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19616,"byte_end":19619,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ For fallible non-panicking parsing of an [`Ident`], use the [`TryFrom`]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19624,"byte_end":19699,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ impl on this type instead.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":19704,"byte_end":19734,"line_start":59,"line_end":59,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":20921,"byte_end":20927,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Ident>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this ident as a `str`\n","sig":null,"attributes":[{"value":"/ Borrow this ident as a `str`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":20877,"byte_end":20909,"line_start":96,"line_end":96,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29052,"byte_end":29058,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Output","qualname":"::output::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609}],"decl_id":null,"docs":" Output from password hashing functions, i.e. the \"hash\" or \"digest\"\n as raw bytes.","sig":null,"attributes":[{"value":"/ Output from password hashing functions, i.e. the \"hash\" or \"digest\"","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24435,"byte_end":24506,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ as raw bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24507,"byte_end":24524,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24525,"byte_end":24528,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Output`] type implements the RECOMMENDED best practices described in","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24529,"byte_end":24607,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ the [PHC string format specification][1], namely:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24608,"byte_end":24661,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24662,"byte_end":24665,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ > The hash output, for a verification, must be long enough to make preimage","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24666,"byte_end":24745,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ > attacks at least as hard as password guessing. To promote wide acceptance,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24746,"byte_end":24826,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ > a default output size of 256 bits (32 bytes, encoded as 43 characters) is","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24827,"byte_end":24906,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ > recommended. Function implementations SHOULD NOT allow outputs of less","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24907,"byte_end":24983,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ > than 80 bits to be used for password verification.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":24984,"byte_end":25040,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25041,"byte_end":25044,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25045,"byte_end":25069,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ Per the description above, the recommended default length for an [`Output`]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25070,"byte_end":25149,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of a password hashing function is **32-bytes** (256-bits).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25150,"byte_end":25212,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25213,"byte_end":25216,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25217,"byte_end":25234,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ The above guidelines are interpreted into the following constraints:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25235,"byte_end":25307,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25308,"byte_end":25311,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **10**-bytes (80-bits)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25312,"byte_end":25356,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ - Maximum length: **64**-bytes (512-bits)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25357,"byte_end":25402,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25403,"byte_end":25406,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The specific recommendation of a 64-byte maximum length is taken as a best","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25407,"byte_end":25485,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ practice from the hash output guidelines for [Argon2 Encoding][2] given in","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25486,"byte_end":25564,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ the same document:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25565,"byte_end":25587,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25588,"byte_end":25591,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ > The hash output...length shall be between 12 and 64 bytes (16 and 86","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25592,"byte_end":25666,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ > characters, respectively). The default output length is 32 bytes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25667,"byte_end":25737,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ > (43 characters).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25738,"byte_end":25760,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25761,"byte_end":25764,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25765,"byte_end":25838,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 32-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25839,"byte_end":25898,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25899,"byte_end":25902,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Constant-time comparisons","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25903,"byte_end":25934,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ The [`Output`] type impls the [`ConstantTimeEq`] trait from the [`subtle`]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":25935,"byte_end":26013,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ crate and uses it to perform constant-time comparisons.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26014,"byte_end":26073,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26074,"byte_end":26077,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Additionally the [`PartialEq`] and [`Eq`] trait impls for [`Output`] use","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26078,"byte_end":26154,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ [`ConstantTimeEq`] when performing comparisons.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26155,"byte_end":26206,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26207,"byte_end":26210,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Attacks on non-constant-time password hash comparisons","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26211,"byte_end":26272,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ Comparing password hashes in constant-time is known to mitigate at least","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26273,"byte_end":26349,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ one [poorly understood attack][3] involving an adversary with the following","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26350,"byte_end":26429,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ knowledge/capabilities:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26430,"byte_end":26457,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26458,"byte_end":26461,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - full knowledge of what password hashing algorithm is being used","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26462,"byte_end":26531,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/   including any relevant configurable parameters","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26532,"byte_end":26584,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ - knowledge of the salt for a particular victim","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26585,"byte_end":26636,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ - ability to accurately measure a timing side-channel on comparisons","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26637,"byte_end":26709,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/   of the password hash over the network","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26710,"byte_end":26753,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26754,"byte_end":26757,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ An attacker with the above is able to perform an offline computation of","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26758,"byte_end":26833,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ the hash for any chosen password in such a way that it will match the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26834,"byte_end":26907,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ hash computed by the server.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26908,"byte_end":26940,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26941,"byte_end":26944,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As noted above, they also measure timing variability in the server's","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":26945,"byte_end":27017,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ comparison of the hash it computes for a given password and a target hash","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27018,"byte_end":27095,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ the attacker is trying to learn.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27096,"byte_end":27132,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27133,"byte_end":27136,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ When the attacker observes a hash comparison that takes longer than their","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27137,"byte_end":27214,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ previous attempts, they learn that they guessed another byte in the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27215,"byte_end":27286,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/ password hash correctly. They can leverage repeated measurements and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27287,"byte_end":27359,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ observations with different candidate passwords to learn the password","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27360,"byte_end":27433,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ hash a byte-at-a-time in a manner similar to other such timing side-channel","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27434,"byte_end":27513,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ attacks.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27514,"byte_end":27526,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27527,"byte_end":27530,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The attack may seem somewhat counterintuitive since learning prefixes of a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27531,"byte_end":27609,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ password hash does not reveal any additional information about the password","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27610,"byte_end":27689,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ itself. However, the above can be combined with an offline dictionary","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27690,"byte_end":27763,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ attack where the attacker is able to determine candidate passwords to send","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27764,"byte_end":27842,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ to the server by performing a brute force search offline and selecting","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27843,"byte_end":27917,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ candidate passwords whose hashes match the portion of the prefix they have","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27918,"byte_end":27996,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ learned so far.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":27997,"byte_end":28016,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28017,"byte_end":28020,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ As the attacker learns a longer and longer prefix of the password hash,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28021,"byte_end":28096,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ they are able to more effectively eliminate candidate passwords offline as","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28097,"byte_end":28175,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ part of a dictionary attack, until they eventually guess the correct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28176,"byte_end":28248,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ password or exhaust their set of candidate passwords.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28249,"byte_end":28306,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28307,"byte_end":28310,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Mitigations","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28311,"byte_end":28329,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ While we have taken care to ensure password hashes are compared in constant","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28330,"byte_end":28409,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ time, we would also suggest preventing such attacks by using randomly","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28410,"byte_end":28483,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ generated salts and keeping those salts secret.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28484,"byte_end":28535,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28536,"byte_end":28539,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`SaltString::generate`][`crate::SaltString::generate`] function can be","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28540,"byte_end":28619,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ used to generate random high-entropy salt values.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28620,"byte_end":28673,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28674,"byte_end":28677,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28678,"byte_end":28772,"line_start":94,"line_end":94,"column_start":1,"column_end":95}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28773,"byte_end":28867,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ [3]: https://web.archive.org/web/20130208100210/http://security-assessment.com/files/documents/presentations/TimingAttackPresentation2012.pdf","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":28868,"byte_end":29013,"line_start":96,"line_end":96,"column_start":1,"column_end":146}}]},{"kind":"Const","id":{"krate":0,"index":125},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29453,"byte_end":29463,"line_start":112,"line_end":112,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::output::Output::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Minimum length of a [`Output`] string: 10-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Output`] string: 10-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29386,"byte_end":29438,"line_start":111,"line_end":111,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":126},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29631,"byte_end":29641,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::output::Output::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] string: 64-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29482,"byte_end":29532,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29537,"byte_end":29540,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Output`] for more information.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29545,"byte_end":29616,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":127},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29779,"byte_end":29793,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"name":"B64_MAX_LENGTH","qualname":"::output::Output::B64_MAX_LENGTH","value":"usize","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] when encoded as B64 string: 86-bytes\n (i.e. 86 ASCII characters)\n","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] when encoded as B64 string: 86-bytes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29660,"byte_end":29729,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ (i.e. 86 ASCII characters)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29734,"byte_end":29764,"line_start":120,"line_end":120,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30003,"byte_end":30006,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Output>::new","value":"pub fn new(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice, validating it according\n to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice, validating it according","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29842,"byte_end":29916,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29921,"byte_end":29991,"line_start":124,"line_end":124,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30355,"byte_end":30372,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"new_with_encoding","qualname":"<Output>::new_with_encoding","value":"pub fn new_with_encoding(&[u8], Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice and [`Encoding`],\n validating it according to [`Output::MIN_LENGTH`] and\n [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice and [`Encoding`],","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30169,"byte_end":30236,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/ validating it according to [`Output::MIN_LENGTH`] and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30241,"byte_end":30298,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30303,"byte_end":30343,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30863,"byte_end":30872,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"init_with","qualname":"<Output>::init_with","value":"pub fn init_with<F>(usize, F) -> Result<Self> where F: FnOnce(&mut [u8]) ->\nResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an [`Output`] using the provided method, which is given\n a mutable byte slice into which it should write the output.","sig":null,"attributes":[{"value":"/ Initialize an [`Output`] using the provided method, which is given","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30535,"byte_end":30605,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ a mutable byte slice into which it should write the output.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30610,"byte_end":30673,"line_start":142,"line_end":142,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30678,"byte_end":30681,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The `output_size` (in bytes) must be known in advance, as well as at","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30686,"byte_end":30758,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ least [`Output::MIN_LENGTH`] bytes and at most [`Output::MAX_LENGTH`]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30763,"byte_end":30836,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":30841,"byte_end":30851,"line_start":146,"line_end":146,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31467,"byte_end":31475,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Output>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the output value as a byte slice.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31411,"byte_end":31455,"line_start":169,"line_end":169,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31616,"byte_end":31624,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Output>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`Output`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`Output`] is serialized with.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31539,"byte_end":31604,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31746,"byte_end":31749,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"len","qualname":"<Output>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the length of the output value as a byte slice.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31679,"byte_end":31734,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31944,"byte_end":31954,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Output>::b64_decode","value":"pub fn b64_decode(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse B64-encoded [`Output`], i.e. using the PHC string\n specification's restricted interpretation of Base64.\n","sig":null,"attributes":[{"value":"/ Parse B64-encoded [`Output`], i.e. using the PHC string","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31812,"byte_end":31871,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/ specification's restricted interpretation of Base64.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":31876,"byte_end":31932,"line_start":185,"line_end":185,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32250,"byte_end":32260,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<Output>::b64_encode","value":"pub fn b64_encode<'a>(&Self, &'a mut [u8]) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Write B64-encoded [`Output`] to the provided buffer, returning\n a sub-slice containing the encoded data.","sig":null,"attributes":[{"value":"/ Write B64-encoded [`Output`] to the provided buffer, returning","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32040,"byte_end":32106,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ a sub-slice containing the encoded data.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32111,"byte_end":32155,"line_start":191,"line_end":191,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32160,"byte_end":32163,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the buffer is too short to contain the output.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32168,"byte_end":32238,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32442,"byte_end":32448,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"decode","qualname":"<Output>::decode","value":"pub fn decode(&str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given input string using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Decode the given input string using the specified [`Encoding`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32363,"byte_end":32430,"line_start":198,"line_end":198,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32797,"byte_end":32803,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"encode","qualname":"<Output>::encode","value":"pub fn encode<'a>(&Self, &'a mut [u8], Encoding) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Encode this [`Output`] using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Encode this [`Output`] using the specified [`Encoding`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32725,"byte_end":32785,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33005,"byte_end":33012,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"b64_len","qualname":"<Output>::b64_len","value":"pub fn b64_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this [`Output`] when encoded as B64.\n","sig":null,"attributes":[{"value":"/ Get the length of this [`Output`] when encoded as B64.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":32935,"byte_end":32993,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36572,"byte_end":36584,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"ParamsString","qualname":"::params::ParamsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter string.","sig":null,"attributes":[{"value":"/ Algorithm parameter string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36084,"byte_end":36115,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36116,"byte_end":36119,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The [PHC string format specification][1] defines a set of optional","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36120,"byte_end":36190,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ algorithm-specific name/value pairs which can be encoded into a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36191,"byte_end":36258,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ PHC-formatted parameter string as follows:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36259,"byte_end":36305,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36306,"byte_end":36309,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36310,"byte_end":36321,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ $<param>=<value>(,<param>=<value>)*","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36322,"byte_end":36361,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36362,"byte_end":36369,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36370,"byte_end":36373,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This type represents that set of parameters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36374,"byte_end":36422,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36423,"byte_end":36426,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36427,"byte_end":36519,"line_start":42,"line_end":42,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36669,"byte_end":36672,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<ParamsString>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new empty [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Create new empty [`ParamsString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36619,"byte_end":36657,"line_start":47,"line_end":47,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36801,"byte_end":36808,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"add_str","qualname":"<ParamsString>::add_str","value":"pub fn add_str<'a, impl TryInto<Ident<'a>>: TryInto<Ident>,\nimpl TryInto<Value<'a>>: TryInto<Value>>(&mut Self, impl TryInto<Ident<'a>>,\nimpl TryInto<Value<'a>>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a string value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a string value to the [`ParamsString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36720,"byte_end":36789,"line_start":52,"line_end":52,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37208,"byte_end":37219,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"add_decimal","qualname":"<ParamsString>::add_decimal","value":"pub fn add_decimal<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&mut Self, impl TryInto<Ident<'a>>,\nDecimal) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a decimal value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a decimal value to the [`ParamsString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37126,"byte_end":37196,"line_start":63,"line_end":63,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37490,"byte_end":37498,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ParamsString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a byte slice.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37413,"byte_end":37478,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37633,"byte_end":37639,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ParamsString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a `str`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37561,"byte_end":37621,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37778,"byte_end":37781,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"len","qualname":"<ParamsString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the count of the number ASCII characters in this [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Get the count of the number ASCII characters in this [`ParamsString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37692,"byte_end":37766,"line_start":79,"line_end":79,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37887,"byte_end":37895,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParamsString>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this set of parameters empty?\n","sig":null,"attributes":[{"value":"/ Is this set of parameters empty?","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37839,"byte_end":37875,"line_start":84,"line_end":84,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37992,"byte_end":37996,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"iter","qualname":"<ParamsString>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the parameters.\n","sig":null,"attributes":[{"value":"/ Iterate over the parameters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":37948,"byte_end":37980,"line_start":89,"line_end":89,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38112,"byte_end":38115,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"get","qualname":"<ParamsString>::get","value":"pub fn get<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&Self, impl TryInto<Ident<'a>>)\n-> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter [`Value`] by name.\n","sig":null,"attributes":[{"value":"/ Get a parameter [`Value`] by name.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38062,"byte_end":38100,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38411,"byte_end":38418,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"get_str","qualname":"<ParamsString>::get_str","value":"pub fn get_str<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&Self, impl TryInto<Ident<'a>>)\n-> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a `str`.\n","sig":null,"attributes":[{"value":"/ Get a parameter as a `str`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38368,"byte_end":38399,"line_start":107,"line_end":107,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38653,"byte_end":38664,"line_start":115,"line_end":115,"column_start":12,"column_end":23},"name":"get_decimal","qualname":"<ParamsString>::get_decimal","value":"pub fn get_decimal<'a,\nimpl TryInto<Ident<'a>>: TryInto<Ident>>(&Self, impl TryInto<Ident<'a>>)\n-> Option<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a [`Decimal`].","sig":null,"attributes":[{"value":"/ Get a parameter as a [`Decimal`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38541,"byte_end":38578,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38583,"byte_end":38586,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ See [`Value::decimal`] for format information.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":38591,"byte_end":38641,"line_start":114,"line_end":114,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":261},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41242,"byte_end":41246,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"Iter","qualname":"::params::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":263}],"decl_id":null,"docs":" Iterator over algorithm parameters stored in a [`ParamsString`] struct.\n","sig":null,"attributes":[{"value":"/ Iterator over algorithm parameters stored in a [`ParamsString`] struct.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41155,"byte_end":41230,"line_start":210,"line_end":210,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50125,"byte_end":50129,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"Salt","qualname":"::salt::Salt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Salt string.","sig":null,"attributes":[{"value":"/ Salt string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":46920,"byte_end":46936,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":46937,"byte_end":46940,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In password hashing, a \"salt\" is an additional value used to","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":46941,"byte_end":47005,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ personalize/tweak the output of a password hashing function for a given","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47006,"byte_end":47081,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ input password.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47082,"byte_end":47101,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47102,"byte_end":47105,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Salts help defend against attacks based on precomputed tables of hashed","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47106,"byte_end":47181,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ passwords, i.e. \"[rainbow tables][1]\".","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47182,"byte_end":47224,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47225,"byte_end":47228,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The [`Salt`] type implements the RECOMMENDED best practices for salts","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47229,"byte_end":47302,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][2], namely:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47303,"byte_end":47369,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47370,"byte_end":47373,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ > - Maximum lengths for salt, output and parameter values are meant to help","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47374,"byte_end":47453,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ >   consumer implementations, in particular written in C and using","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47454,"byte_end":47524,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ >   stack-allocated buffers. These buffers must account for the worst case,","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47525,"byte_end":47604,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ >   i.e. the maximum defined length. Therefore, keep these lengths low.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47605,"byte_end":47680,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ > - The role of salts is to achieve uniqueness. A random salt is fine for","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47681,"byte_end":47758,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ >   that as long as its length is sufficient; a 16-byte salt would work well","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47759,"byte_end":47839,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ >   (by definition, UUID are very good salts, and they encode over exactly","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47840,"byte_end":47918,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ >   16 bytes). 16 bytes encode as 22 characters in B64. Functions should","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47919,"byte_end":47995,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ >   disallow salt values that are too small for security (4 bytes should be","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":47996,"byte_end":48075,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ >   viewed as an absolute minimum).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48076,"byte_end":48115,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48116,"byte_end":48119,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48120,"byte_end":48144,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ The recommended default length for a salt string is **16-bytes** (128-bits).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48145,"byte_end":48225,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48226,"byte_end":48229,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ See below for rationale.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48230,"byte_end":48258,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48259,"byte_end":48262,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48263,"byte_end":48280,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ Salt strings are constrained to the following set of characters per the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48281,"byte_end":48356,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ PHC spec:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48357,"byte_end":48370,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48371,"byte_end":48374,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ > The salt consists in a sequence of characters in: `[a-zA-Z0-9/+.-]`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48375,"byte_end":48448,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ > (lowercase letters, uppercase letters, digits, /, +, . and -).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48449,"byte_end":48517,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48518,"byte_end":48521,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Additionally the following length restrictions are enforced based on the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48522,"byte_end":48598,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ guidelines from the spec:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48599,"byte_end":48628,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48629,"byte_end":48632,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **4**-bytes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48633,"byte_end":48666,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/ - Maximum length: **64**-bytes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48667,"byte_end":48701,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48702,"byte_end":48705,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A maximum length is enforced based on the above recommendation for","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48706,"byte_end":48776,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"/ supporting stack-allocated buffers (which this library uses), and the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48777,"byte_end":48850,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ specific determination of 64-bytes is taken as a best practice from the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48851,"byte_end":48926,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [Argon2 Encoding][3] specification in the same document:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48927,"byte_end":48987,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48988,"byte_end":48991,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ > The length in bytes of the salt is between 8 and 64 bytes<sup>†</sup>, thus","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":48992,"byte_end":49075,"line_start":62,"line_end":62,"column_start":1,"column_end":82}},{"value":"/ > yielding a length in characters between 11 and 64 characters (and that","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49076,"byte_end":49152,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ > length is never equal to 1 modulo 4). The default byte length of the salt","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49153,"byte_end":49232,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ > is 16 bytes (22 characters in B64 encoding). An encoded UUID, or a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49233,"byte_end":49305,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ > sequence of 16 bytes produced with a cryptographically strong PRNG, are","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49306,"byte_end":49383,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ > appropriate salt values.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49384,"byte_end":49414,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/ >","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49415,"byte_end":49420,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ > <sup>†</sup>The Argon2 specification states that the salt can be much longer, up","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49421,"byte_end":49509,"line_start":69,"line_end":69,"column_start":1,"column_end":87}},{"value":"/ > to 2^32-1 bytes, but this makes little sense for password hashing.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49510,"byte_end":49582,"line_start":70,"line_end":70,"column_start":1,"column_end":73}},{"value":"/ > Specifying a relatively small maximum length allows for parsing with a","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49583,"byte_end":49659,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"/ > stack allocated buffer.)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49660,"byte_end":49690,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49691,"byte_end":49694,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49695,"byte_end":49768,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 16-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49769,"byte_end":49828,"line_start":75,"line_end":75,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49829,"byte_end":49832,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Rainbow_table","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49833,"byte_end":49885,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49886,"byte_end":49980,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/ [3]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":49981,"byte_end":50075,"line_start":79,"line_end":79,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":318},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50274,"byte_end":50284,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::salt::Salt::<'a>::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Minimum length of a [`Salt`] string: 4-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Salt`] string: 4-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50210,"byte_end":50259,"line_start":85,"line_end":85,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":319},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50449,"byte_end":50459,"line_start":91,"line_end":91,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::salt::Salt::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Maximum length of a [`Salt`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of a [`Salt`] string: 64-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50302,"byte_end":50352,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50357,"byte_end":50360,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Salt`] for more information.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50365,"byte_end":50434,"line_start":90,"line_end":90,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":320},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50536,"byte_end":50554,"line_start":94,"line_end":94,"column_start":15,"column_end":33},"name":"RECOMMENDED_LENGTH","qualname":"::salt::Salt::<'a>::RECOMMENDED_LENGTH","value":"usize","parent":{"krate":0,"index":316},"children":[],"decl_id":null,"docs":" Recommended length of a salt: 16-bytes.\n","sig":null,"attributes":[{"value":"/ Recommended length of a salt: 16-bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50478,"byte_end":50521,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50730,"byte_end":50733,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Salt>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Salt`] from the given `str`, validating it according to\n [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Salt`] from the given `str`, validating it according to","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50573,"byte_end":50643,"line_start":96,"line_end":96,"column_start":5,"column_end":75}},{"value":"/ [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50648,"byte_end":50718,"line_start":97,"line_end":97,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51360,"byte_end":51370,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Salt>::b64_decode","value":"pub fn b64_decode<'b>(&Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Salt`], writing the decoded result\n into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Salt`], writing the decoded result","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51049,"byte_end":51121,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ into the provided buffer, and returning a slice of the buffer","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51126,"byte_end":51191,"line_start":113,"line_end":113,"column_start":5,"column_end":70}},{"value":"/ containing the decoded result on success.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51196,"byte_end":51241,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51246,"byte_end":51249,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51254,"byte_end":51348,"line_start":116,"line_end":116,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51510,"byte_end":51516,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Salt>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51465,"byte_end":51498,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51615,"byte_end":51623,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Salt>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51572,"byte_end":51603,"line_start":126,"line_end":126,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51754,"byte_end":51757,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"len","qualname":"<Salt>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51689,"byte_end":51742,"line_start":131,"line_end":131,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52447,"byte_end":52457,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"SaltString","qualname":"::salt::SaltString","value":"SaltString {  }","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":667}],"decl_id":null,"docs":" Owned stack-allocated equivalent of [`Salt`].\n","sig":null,"attributes":[{"value":"/ Owned stack-allocated equivalent of [`Salt`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52358,"byte_end":52407,"line_start":163,"line_end":163,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52846,"byte_end":52854,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"generate","qualname":"<SaltString>::generate","value":"pub fn generate<impl CryptoRng + RngCore: CryptoRng +\nRngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a random B64-encoded [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Generate a random B64-encoded [`SaltString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52694,"byte_end":52743,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"rand_core\")","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52748,"byte_end":52777,"line_start":176,"line_end":176,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53112,"byte_end":53115,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"new","qualname":"<SaltString>::new","value":"pub fn new(&str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Create a new [`SaltString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53068,"byte_end":53100,"line_start":184,"line_end":184,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53727,"byte_end":53737,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<SaltString>::b64_encode","value":"pub fn b64_encode(&[u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given byte slice as B64 into a new [`SaltString`].","sig":null,"attributes":[{"value":"/ Encode the given byte slice as B64 into a new [`SaltString`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53593,"byte_end":53658,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53663,"byte_end":53666,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the slice is too long.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53671,"byte_end":53715,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54024,"byte_end":54034,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<SaltString>::b64_decode","value":"pub fn b64_decode<'a>(&Self, &'a mut [u8]) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Decode this [`SaltString`] from B64 into the provided output buffer.\n","sig":null,"attributes":[{"value":"/ Decode this [`SaltString`] from B64 into the provided output buffer.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":53940,"byte_end":54012,"line_start":212,"line_end":212,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54207,"byte_end":54214,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"as_salt","qualname":"<SaltString>::as_salt","value":"pub fn as_salt(&Self) -> Salt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a [`Salt`].\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a [`Salt`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54137,"byte_end":54195,"line_start":217,"line_end":217,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54378,"byte_end":54384,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SaltString>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a `str`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54311,"byte_end":54366,"line_start":222,"line_end":222,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54549,"byte_end":54557,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SaltString>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54506,"byte_end":54537,"line_start":227,"line_end":227,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54685,"byte_end":54688,"line_start":233,"line_end":233,"column_start":12,"column_end":15},"name":"len","qualname":"<SaltString>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54620,"byte_end":54673,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":382},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57034,"byte_end":57041,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"Decimal","qualname":"::value::Decimal","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Type used to represent decimal (i.e. integer) values.\n","sig":null,"attributes":[{"value":"/ Type used to represent decimal (i.e. integer) values.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":56967,"byte_end":57024,"line_start":19,"line_end":19,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57887,"byte_end":57892,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Value","qualname":"::value::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter value string.","sig":null,"attributes":[{"value":"/ Algorithm parameter value string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57050,"byte_end":57087,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57088,"byte_end":57091,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Parameter values are defined in the [PHC string format specification][1].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57092,"byte_end":57169,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57170,"byte_end":57173,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57174,"byte_end":57191,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-zA-Z0-9/+.-]`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57192,"byte_end":57265,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57266,"byte_end":57319,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 0 (i.e. empty values are allowed)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57320,"byte_end":57375,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ - Maximum length: 64 ASCII characters (i.e. 64-bytes)","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57376,"byte_end":57433,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57434,"byte_end":57437,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Additional Notes","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57438,"byte_end":57460,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ The PHC spec allows for algorithm-defined maximum lengths for parameter","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57461,"byte_end":57536,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ values, however this library defines a [`Value::MAX_LENGTH`] of 64 ASCII","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57537,"byte_end":57613,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ characters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57614,"byte_end":57629,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57630,"byte_end":57633,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57634,"byte_end":57712,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57713,"byte_end":57807,"line_start":38,"line_end":38,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":385},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58173,"byte_end":58183,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::value::Value::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Maximum length of an [`Value`] - 64 ASCII characters (i.e. 64-bytes).","sig":null,"attributes":[{"value":"/ Maximum length of an [`Value`] - 64 ASCII characters (i.e. 64-bytes).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57933,"byte_end":58006,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58011,"byte_end":58014,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This value is selected to match the maximum length of a [`Salt`], as this","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58019,"byte_end":58096,"line_start":45,"line_end":45,"column_start":5,"column_end":82}},{"value":"/ library internally uses this type to represent salts.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58101,"byte_end":58158,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58326,"byte_end":58329,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Value>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a [`Value`] from the provided `str`, validating it according to\n the PHC string format's rules.\n","sig":null,"attributes":[{"value":"/ Parse a [`Value`] from the provided `str`, validating it according to","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58202,"byte_end":58275,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ the PHC string format's rules.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58280,"byte_end":58314,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59145,"byte_end":59155,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Value>::b64_decode","value":"pub fn b64_decode<'b>(&Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Value`], writing the decoded\n result into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Value`], writing the decoded","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58628,"byte_end":58694,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ result into the provided buffer, and returning a slice of the buffer","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58699,"byte_end":58771,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ containing the decoded result on success.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58776,"byte_end":58821,"line_start":63,"line_end":63,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58826,"byte_end":58829,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Examples of \"B64\"-encoded parameters in practice are the `keyid` and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58834,"byte_end":58906,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `data` parameters used by the [Argon2 Encoding][1] as described in the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58911,"byte_end":58985,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ PHC string format specification.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":58990,"byte_end":59026,"line_start":67,"line_end":67,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59031,"byte_end":59034,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59039,"byte_end":59133,"line_start":69,"line_end":69,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59318,"byte_end":59324,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59273,"byte_end":59306,"line_start":74,"line_end":74,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59414,"byte_end":59422,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Value>::as_bytes","value":"pub fn as_bytes(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59371,"byte_end":59402,"line_start":79,"line_end":79,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59553,"byte_end":59556,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"len","qualname":"<Value>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59488,"byte_end":59541,"line_start":84,"line_end":84,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59650,"byte_end":59658,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Value>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this value empty?\n","sig":null,"attributes":[{"value":"/ Is this value empty?","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59614,"byte_end":59638,"line_start":89,"line_end":89,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":61357,"byte_end":61364,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"name":"decimal","qualname":"<Value>::decimal","value":"pub fn decimal(&Self) -> Result<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","sig":null,"attributes":[{"value":"/ Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59720,"byte_end":59796,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59801,"byte_end":59804,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Decimal values are integers which follow the rules given in the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59809,"byte_end":59876,"line_start":96,"line_end":96,"column_start":5,"column_end":72}},{"value":"/ [\"Decimal Encoding\" section of the PHC string format specification][1].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59881,"byte_end":59956,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59961,"byte_end":59964,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The decimal encoding rules are as follows:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":59969,"byte_end":60015,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ > For an integer value x, its decimal encoding consist in the following:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60020,"byte_end":60096,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ >","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60101,"byte_end":60106,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ > - If x < 0, then its decimal encoding is the minus sign - followed by the decimal","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60111,"byte_end":60198,"line_start":102,"line_end":102,"column_start":5,"column_end":92}},{"value":"/ >   encoding of -x.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60203,"byte_end":60226,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ > - If x = 0, then its decimal encoding is the single character 0.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60231,"byte_end":60301,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ > - If x > 0, then its decimal encoding is the smallest sequence of ASCII digits that","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60306,"byte_end":60395,"line_start":105,"line_end":105,"column_start":5,"column_end":94}},{"value":"/ >   matches its value (i.e. there is no leading zero).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60400,"byte_end":60458,"line_start":106,"line_end":106,"column_start":5,"column_end":63}},{"value":"/ >","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60463,"byte_end":60468,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ > Thus, a value is a valid decimal for an integer x if and only if all of the following hold true:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60473,"byte_end":60575,"line_start":108,"line_end":108,"column_start":5,"column_end":107}},{"value":"/ >","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60580,"byte_end":60585,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ > - The first character is either a - sign, or an ASCII digit.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60590,"byte_end":60656,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ > - All characters other than the first are ASCII digits.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60661,"byte_end":60722,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/ > - If the first character is - sign, then there is at least another character, and the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60727,"byte_end":60818,"line_start":112,"line_end":112,"column_start":5,"column_end":96}},{"value":"/ >   second character is not a 0.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60823,"byte_end":60859,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/ > - If the string consists in more than one character, then the first one cannot be a 0.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60864,"byte_end":60956,"line_start":114,"line_end":114,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60961,"byte_end":60964,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Note: this implementation does not support negative decimals despite","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":60969,"byte_end":61041,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ them being allowed per the spec above. If you need to parse a negative","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":61046,"byte_end":61120,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ number, please parse it from the string representation directly e.g.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":61125,"byte_end":61197,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ `value.as_str().parse::<i32>()`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":61202,"byte_end":61237,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":61242,"byte_end":61245,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#decimal-encoding","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":61250,"byte_end":61345,"line_start":121,"line_end":121,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62301,"byte_end":62311,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"is_decimal","qualname":"<Value>::is_decimal","value":"pub fn is_decimal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this value parse successfully as a decimal?\n","sig":null,"attributes":[{"value":"/ Does this value parse successfully as a decimal?","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62237,"byte_end":62289,"line_start":150,"line_end":150,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":469},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2631,"byte_end":2645,"line_start":84,"line_end":84,"column_start":11,"column_end":25},"name":"PasswordHasher","qualname":"::PasswordHasher","value":"PasswordHasher","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476}],"decl_id":null,"docs":" Trait for password hashing functions.\n","sig":null,"attributes":[{"value":"/ Trait for password hashing functions.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2579,"byte_end":2620,"line_start":83,"line_end":83,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":470},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2696,"byte_end":2702,"line_start":86,"line_end":86,"column_start":10,"column_end":16},"name":"Params","qualname":"::PasswordHasher::Params","value":"type Params: Clone\n        + Debug\n        + Default\n        + for<'a> TryFrom<&'a PasswordHash<'a>, Error = Error>\n        + for<'a> TryInto<ParamsString, Error = Error>;","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.\n","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2652,"byte_end":2686,"line_start":85,"line_end":85,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3046,"byte_end":3066,"line_start":96,"line_end":96,"column_start":8,"column_end":28},"name":"hash_password_simple","qualname":"::PasswordHasher::hash_password_simple","value":"pub fn hash_password_simple<'a, S>(&Self, &[u8], &'a S)\n-> Result<PasswordHash> where S: AsRef<str> + ?Sized","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Simple API for computing a [`PasswordHash`] from a password and\n [`Salt`] value.","sig":null,"attributes":[{"value":"/ Simple API for computing a [`PasswordHash`] from a password and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2868,"byte_end":2935,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/ [`Salt`] value.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2940,"byte_end":2959,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2964,"byte_end":2967,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Uses the default recommended parameters for a given algorithm.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":2972,"byte_end":3038,"line_start":95,"line_end":95,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3519,"byte_end":3532,"line_start":111,"line_end":111,"column_start":8,"column_end":21},"name":"hash_password","qualname":"::PasswordHasher::hash_password","value":"pub fn hash_password<'a,\nimpl Into<Salt<'a>>: Into<Salt>>(&Self, &[u8], Option<Ident>, Self::Params,\nimpl Into<Salt<'a>>) -> Result<PasswordHash>","parent":{"krate":0,"index":469},"children":[],"decl_id":null,"docs":" Compute a [`PasswordHash`] with the given algorithm [`Ident`]\n (or `None` for the recommended default), password, salt, and\n parameters.\n","sig":null,"attributes":[{"value":"/ Compute a [`PasswordHash`] with the given algorithm [`Ident`]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3357,"byte_end":3422,"line_start":108,"line_end":108,"column_start":5,"column_end":70}},{"value":"/ (or `None` for the recommended default), password, salt, and","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3427,"byte_end":3491,"line_start":109,"line_end":109,"column_start":5,"column_end":69}},{"value":"/ parameters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3496,"byte_end":3511,"line_start":110,"line_end":110,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":479},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4048,"byte_end":4064,"line_start":127,"line_end":127,"column_start":11,"column_end":27},"name":"PasswordVerifier","qualname":"::PasswordVerifier","value":"PasswordVerifier","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" Trait for password verification.","sig":null,"attributes":[{"value":"/ Trait for password verification.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3719,"byte_end":3755,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3756,"byte_end":3759,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Automatically impl'd for any type that impls [`PasswordHasher`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3760,"byte_end":3828,"line_start":122,"line_end":122,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3829,"byte_end":3832,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This trait is object safe and can be used to implement abstractions over","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3833,"byte_end":3909,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ multiple password hashing algorithms. One such abstraction is provided by","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3910,"byte_end":3987,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ the [`PasswordHash::verify_password`] method.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":3988,"byte_end":4037,"line_start":126,"line_end":126,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4260,"byte_end":4275,"line_start":131,"line_end":131,"column_start":8,"column_end":23},"name":"verify_password","qualname":"::PasswordVerifier::verify_password","value":"pub fn verify_password(&Self, &[u8], &PasswordHash) -> Result<()>","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":" Compute this password hashing function against the provided password\n using the parameters from the provided password hash and see if the\n computed output matches.\n","sig":null,"attributes":[{"value":"/ Compute this password hashing function against the provided password","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4071,"byte_end":4143,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ using the parameters from the provided password hash and see if the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4148,"byte_end":4219,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ computed output matches.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4224,"byte_end":4252,"line_start":130,"line_end":130,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":484},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5281,"byte_end":5290,"line_start":160,"line_end":160,"column_start":11,"column_end":20},"name":"McfHasher","qualname":"::McfHasher","value":"McfHasher","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":487}],"decl_id":null,"docs":" Trait for password hashing algorithms which support the legacy\n [Modular Crypt Format (MCF)][MCF].","sig":null,"attributes":[{"value":"/ Trait for password hashing algorithms which support the legacy","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5083,"byte_end":5149,"line_start":156,"line_end":156,"column_start":1,"column_end":67}},{"value":"/ [Modular Crypt Format (MCF)][MCF].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5150,"byte_end":5188,"line_start":157,"line_end":157,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5189,"byte_end":5192,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5193,"byte_end":5270,"line_start":159,"line_end":159,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5599,"byte_end":5615,"line_start":169,"line_end":169,"column_start":8,"column_end":24},"name":"upgrade_mcf_hash","qualname":"::McfHasher::upgrade_mcf_hash","value":"pub fn upgrade_mcf_hash<'a>(&Self, &'a str) -> Result<PasswordHash>","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","sig":null,"attributes":[{"value":"/ Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5297,"byte_end":5365,"line_start":161,"line_end":161,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5370,"byte_end":5373,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5378,"byte_end":5389,"line_start":163,"line_end":163,"column_start":5,"column_end":16}},{"value":"/ $<id>$<content>","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5394,"byte_end":5413,"line_start":164,"line_end":164,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5418,"byte_end":5425,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5430,"byte_end":5433,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ MCF hashes are otherwise largely unstructured and parsed according to","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5438,"byte_end":5511,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ algorithm-specific rules so hashers must parse a raw string themselves.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5516,"byte_end":5591,"line_start":168,"line_end":168,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5755,"byte_end":5770,"line_start":172,"line_end":172,"column_start":8,"column_end":23},"name":"verify_mcf_hash","qualname":"::McfHasher::verify_mcf_hash","value":"pub fn verify_mcf_hash(&Self, &[u8], &str) -> Result<()> where\nSelf: PasswordVerifier","parent":{"krate":0,"index":484},"children":[],"decl_id":null,"docs":" Verify a password hash in MCF format against the provided password.\n","sig":null,"attributes":[{"value":"/ Verify a password hash in MCF format against the provided password.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5676,"byte_end":5747,"line_start":171,"line_end":171,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7246,"byte_end":7258,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"PasswordHash","qualname":"::PasswordHash","value":"PasswordHash { algorithm, version, params, salt, hash }","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"decl_id":null,"docs":" Password hash.","sig":null,"attributes":[{"value":"/ Password hash.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5956,"byte_end":5974,"line_start":180,"line_end":180,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5975,"byte_end":5978,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This type corresponds to the parsed representation of a PHC string as","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":5979,"byte_end":6052,"line_start":182,"line_end":182,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][1].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6053,"byte_end":6111,"line_start":183,"line_end":183,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6112,"byte_end":6115,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ PHC strings have the following format:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6116,"byte_end":6158,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6159,"byte_end":6162,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6163,"byte_end":6174,"line_start":187,"line_end":187,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6175,"byte_end":6253,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6254,"byte_end":6261,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6262,"byte_end":6265,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ where:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6266,"byte_end":6276,"line_start":191,"line_end":191,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6277,"byte_end":6280,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ - `<id>` is the symbolic name for the function","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6281,"byte_end":6331,"line_start":193,"line_end":193,"column_start":1,"column_end":51}},{"value":"/ - `<version>` is the algorithm version","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6332,"byte_end":6374,"line_start":194,"line_end":194,"column_start":1,"column_end":43}},{"value":"/ - `<param>` is a parameter name","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6375,"byte_end":6410,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/ - `<value>` is a parameter value","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6411,"byte_end":6447,"line_start":196,"line_end":196,"column_start":1,"column_end":37}},{"value":"/ - `<salt>` is an encoding of the salt","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6448,"byte_end":6489,"line_start":197,"line_end":197,"column_start":1,"column_end":42}},{"value":"/ - `<hash>` is an encoding of the hash output","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6490,"byte_end":6538,"line_start":198,"line_end":198,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6539,"byte_end":6542,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The string is then the concatenation, in that order, of:","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6543,"byte_end":6603,"line_start":200,"line_end":200,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6604,"byte_end":6607,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ - a `$` sign;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6608,"byte_end":6625,"line_start":202,"line_end":202,"column_start":1,"column_end":18}},{"value":"/ - the function symbolic name;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6626,"byte_end":6659,"line_start":203,"line_end":203,"column_start":1,"column_end":34}},{"value":"/ - optionally, a `$` sign followed by the algorithm version with a `v=version` format;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6660,"byte_end":6749,"line_start":204,"line_end":204,"column_start":1,"column_end":90}},{"value":"/ - optionally, a `$` sign followed by one or several parameters, each with a `name=value` format;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6750,"byte_end":6850,"line_start":205,"line_end":205,"column_start":1,"column_end":101}},{"value":"/   the parameters are separated by commas;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6851,"byte_end":6896,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ - optionally, a `$` sign followed by the (encoded) salt value;","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6897,"byte_end":6963,"line_start":207,"line_end":207,"column_start":1,"column_end":67}},{"value":"/ - optionally, a `$` sign followed by the (encoded) hash output (the hash output may be present","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":6964,"byte_end":7062,"line_start":208,"line_end":208,"column_start":1,"column_end":99}},{"value":"/   only if the salt is present).","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7063,"byte_end":7098,"line_start":209,"line_end":209,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7099,"byte_end":7102,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7103,"byte_end":7195,"line_start":211,"line_end":211,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7441,"byte_end":7450,"line_start":218,"line_end":218,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::PasswordHash::algorithm","value":"ident::Ident<'a>","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Password hashing algorithm identifier.","sig":null,"attributes":[{"value":"/ Password hashing algorithm identifier.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7269,"byte_end":7311,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7316,"byte_end":7319,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<id>` field in a PHC string, a.k.a. the","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7324,"byte_end":7392,"line_start":216,"line_end":216,"column_start":5,"column_end":73}},{"value":"/ symbolic name for the function.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7397,"byte_end":7432,"line_start":217,"line_end":217,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":712},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7579,"byte_end":7586,"line_start":223,"line_end":223,"column_start":9,"column_end":16},"name":"version","qualname":"::PasswordHash::version","value":"core::option::Option<u32>","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Optional version field.","sig":null,"attributes":[{"value":"/ Optional version field.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7468,"byte_end":7495,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7500,"byte_end":7503,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<version>` field in a PHC string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7508,"byte_end":7570,"line_start":222,"line_end":222,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":713},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7780,"byte_end":7786,"line_start":229,"line_end":229,"column_start":9,"column_end":15},"name":"params","qualname":"::PasswordHash::params","value":"params::ParamsString","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7610,"byte_end":7644,"line_start":225,"line_end":225,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7649,"byte_end":7652,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the set of `$<param>=<value>(,<param>=<value>)*`","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7657,"byte_end":7729,"line_start":227,"line_end":227,"column_start":5,"column_end":77}},{"value":"/ name/value pairs in a PHC string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7734,"byte_end":7771,"line_start":228,"line_end":228,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":714},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7949,"byte_end":7953,"line_start":234,"line_end":234,"column_start":9,"column_end":13},"name":"salt","qualname":"::PasswordHash::salt","value":"core::option::Option<salt::Salt<'a>>","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" [`Salt`] string for personalizing a password hash output.","sig":null,"attributes":[{"value":"/ [`Salt`] string for personalizing a password hash output.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7807,"byte_end":7868,"line_start":231,"line_end":231,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7873,"byte_end":7876,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<salt>` value in a PHC string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7881,"byte_end":7940,"line_start":233,"line_end":233,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":715},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8121,"byte_end":8125,"line_start":239,"line_end":239,"column_start":9,"column_end":13},"name":"hash","qualname":"::PasswordHash::hash","value":"core::option::Option<output::Output>","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Password hashing function [`Output`], a.k.a. hash/digest.","sig":null,"attributes":[{"value":"/ Password hashing function [`Output`], a.k.a. hash/digest.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":7978,"byte_end":8039,"line_start":236,"line_end":236,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8044,"byte_end":8047,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<hash>` output in a PHC string.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8052,"byte_end":8112,"line_start":238,"line_end":238,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8255,"byte_end":8258,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"new","qualname":"<PasswordHash>::new","value":"pub fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from a string in the PHC string format.\n","sig":null,"attributes":[{"value":"/ Parse a password hash from a string in the PHC string format.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8178,"byte_end":8243,"line_start":243,"line_end":243,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8404,"byte_end":8409,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"parse","qualname":"<PasswordHash>::parse","value":"pub fn parse(&'a str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from the given [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Parse a password hash from the given [`Encoding`].","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8338,"byte_end":8392,"line_start":248,"line_end":248,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":10317,"byte_end":10325,"line_start":319,"line_end":319,"column_start":12,"column_end":20},"name":"generate","qualname":"<PasswordHash>::generate","value":"pub fn generate<impl PasswordHasher: PasswordHasher,\nimpl AsRef<[u8]>: AsRef<[u8]>>(impl PasswordHasher, impl AsRef<[u8]>, &'a str)\n-> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Generate a password hash using the supplied algorithm.\n","sig":null,"attributes":[{"value":"/ Generate a password hash using the supplied algorithm.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":10247,"byte_end":10305,"line_start":318,"line_end":318,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":10633,"byte_end":10648,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"verify_password","qualname":"<PasswordHash>::verify_password","value":"pub fn verify_password<impl AsRef<[u8]>: AsRef<[u8]>>(&Self,\n&[&dyn PasswordVerifier], impl AsRef<[u8]>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Verify this password hash using the specified set of supported\n [`PasswordHasher`] trait objects.\n","sig":null,"attributes":[{"value":"/ Verify this password hash using the specified set of supported","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":10513,"byte_end":10579,"line_start":327,"line_end":327,"column_start":5,"column_end":71}},{"value":"/ [`PasswordHasher`] trait objects.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":10584,"byte_end":10621,"line_start":328,"line_end":328,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":11039,"byte_end":11047,"line_start":344,"line_end":344,"column_start":12,"column_end":20},"name":"encoding","qualname":"<PasswordHash>::encoding","value":"pub fn encoding(&Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`PasswordHash`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`PasswordHash`] is serialized with.","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":10956,"byte_end":11027,"line_start":343,"line_end":343,"column_start":5,"column_end":76}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12960,"byte_end":12968,"line_start":35,"line_end":35,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13030,"byte_end":13038,"line_start":41,"line_end":41,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15477,"byte_end":15482,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":16879,"byte_end":16884,"line_start":89,"line_end":89,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":17002,"byte_end":17007,"line_start":95,"line_end":95,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18786,"byte_end":18791,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":20996,"byte_end":21001,"line_start":102,"line_end":102,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":21089,"byte_end":21094,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":21336,"byte_end":21341,"line_start":118,"line_end":118,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":21876,"byte_end":21881,"line_start":143,"line_end":143,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":22012,"byte_end":22017,"line_start":149,"line_end":149,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29373,"byte_end":29379,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33110,"byte_end":33116,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33208,"byte_end":33214,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33333,"byte_end":33339,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33464,"byte_end":33470,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33580,"byte_end":33586,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33720,"byte_end":33726,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":34014,"byte_end":34020,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36600,"byte_end":36612,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":39453,"byte_end":39465,"line_start":142,"line_end":142,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":40562,"byte_end":40574,"line_start":183,"line_end":183,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":40874,"byte_end":40886,"line_start":198,"line_end":198,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41016,"byte_end":41028,"line_start":204,"line_end":204,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41306,"byte_end":41310,"line_start":215,"line_end":215,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41587,"byte_end":41591,"line_start":228,"line_end":228,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42285,"byte_end":42291,"line_start":252,"line_end":252,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42444,"byte_end":42450,"line_start":258,"line_end":258,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42598,"byte_end":42604,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42794,"byte_end":42800,"line_start":274,"line_end":274,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50195,"byte_end":50199,"line_start":84,"line_end":84,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51837,"byte_end":51841,"line_start":137,"line_end":137,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51940,"byte_end":51944,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52086,"byte_end":52090,"line_start":151,"line_end":151,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52228,"byte_end":52232,"line_start":157,"line_end":157,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52677,"byte_end":52687,"line_start":174,"line_end":174,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54764,"byte_end":54774,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54858,"byte_end":54868,"line_start":244,"line_end":244,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":55077,"byte_end":55081,"line_start":251,"line_end":251,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57917,"byte_end":57922,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62393,"byte_end":62398,"line_start":156,"line_end":156,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62497,"byte_end":62502,"line_start":162,"line_end":162,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62650,"byte_end":62657,"line_start":170,"line_end":170,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62816,"byte_end":62823,"line_start":178,"line_end":178,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62966,"byte_end":62971,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4388,"byte_end":4389,"line_start":134,"line_end":134,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8155,"byte_end":8167,"line_start":242,"line_end":242,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":11288,"byte_end":11300,"line_start":351,"line_end":351,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":11434,"byte_end":11446,"line_start":359,"line_end":359,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":12960,"byte_end":12968,"line_start":35,"line_end":35,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":507},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/encoding.rs","byte_start":13030,"byte_end":13038,"line_start":41,"line_end":41,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":15477,"byte_end":15482,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":529},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":16879,"byte_end":16884,"line_start":89,"line_end":89,"column_start":25,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":529},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/errors.rs","byte_start":17002,"byte_end":17007,"line_start":95,"line_end":95,"column_start":45,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":529},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":18786,"byte_end":18791,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":20996,"byte_end":21001,"line_start":102,"line_end":102,"column_start":25,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":575},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":21089,"byte_end":21094,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":575},"to":{"krate":1,"index":3242}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":21336,"byte_end":21341,"line_start":118,"line_end":118,"column_start":31,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":575},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":21876,"byte_end":21881,"line_start":143,"line_end":143,"column_start":27,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":575},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/ident.rs","byte_start":22012,"byte_end":22017,"line_start":149,"line_end":149,"column_start":25,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":575},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":29373,"byte_end":29379,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33110,"byte_end":33116,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33208,"byte_end":33214,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":605},"to":{"krate":25,"index":57}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33333,"byte_end":33339,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":12188}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33464,"byte_end":33470,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33580,"byte_end":33586,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":33720,"byte_end":33726,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/output.rs","byte_start":34014,"byte_end":34020,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":36600,"byte_end":36612,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":39453,"byte_end":39465,"line_start":142,"line_end":142,"column_start":18,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":12188}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":40562,"byte_end":40574,"line_start":183,"line_end":183,"column_start":37,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":7711}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":40874,"byte_end":40886,"line_start":198,"line_end":198,"column_start":23,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41016,"byte_end":41028,"line_start":204,"line_end":204,"column_start":21,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":618},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41306,"byte_end":41310,"line_start":215,"line_end":215,"column_start":10,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":41587,"byte_end":41591,"line_start":228,"line_end":228,"column_start":23,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":261},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42285,"byte_end":42291,"line_start":252,"line_end":252,"column_start":21,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":632},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42444,"byte_end":42450,"line_start":258,"line_end":258,"column_start":18,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":632},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42598,"byte_end":42604,"line_start":267,"line_end":267,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":632},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/params.rs","byte_start":42794,"byte_end":42800,"line_start":274,"line_end":274,"column_start":16,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":632},"to":{"krate":1,"index":9545}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":50195,"byte_end":50199,"line_start":84,"line_end":84,"column_start":10,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51837,"byte_end":51841,"line_start":137,"line_end":137,"column_start":25,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":51940,"byte_end":51944,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52086,"byte_end":52090,"line_start":151,"line_end":151,"column_start":27,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52228,"byte_end":52232,"line_start":157,"line_end":157,"column_start":25,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":9595}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":52677,"byte_end":52687,"line_start":174,"line_end":174,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54764,"byte_end":54774,"line_start":238,"line_end":238,"column_start":21,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":664},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":54858,"byte_end":54868,"line_start":244,"line_end":244,"column_start":20,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":664},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/salt.rs","byte_start":55077,"byte_end":55081,"line_start":251,"line_end":251,"column_start":35,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":57917,"byte_end":57922,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62393,"byte_end":62398,"line_start":156,"line_end":156,"column_start":25,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":676},"to":{"krate":1,"index":2921}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62497,"byte_end":62502,"line_start":162,"line_end":162,"column_start":31,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":676},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62650,"byte_end":62657,"line_start":170,"line_end":170,"column_start":33,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62816,"byte_end":62823,"line_start":178,"line_end":178,"column_start":34,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/value.rs","byte_start":62966,"byte_end":62971,"line_start":186,"line_end":186,"column_start":27,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":676},"to":{"krate":1,"index":9602}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":4388,"byte_end":4389,"line_start":134,"line_end":134,"column_start":46,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":482},"to":{"krate":0,"index":479}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":8155,"byte_end":8167,"line_start":242,"line_end":242,"column_start":10,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":11288,"byte_end":11300,"line_start":351,"line_end":351,"column_start":31,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":2937}},{"span":{"file_name":"/home/flo/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.2.3/src/lib.rs","byte_start":11434,"byte_end":11446,"line_start":359,"line_end":359,"column_start":27,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":709},"to":{"krate":1,"index":9602}}]}